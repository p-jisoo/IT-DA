/*
 * App URI: regiseterDialog
 * Source Location: regiseterDialog.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("regiseterDialog", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * dialog.js
			 * Created at 2023. 8. 22. 오후 7:06:37.
			 *
			 * @author USER
			 ************************************************/

			/*
			 * "yes" 버튼(yes_btn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onYes_btnClick(e){
				var yes_btn = e.control;
				var submission = app.lookup("sms1");
				var initValue = app.getHost().initValue;
				//console.log(initValue);
				//각각 value값 가져오기
				var userId=initValue.param1;
				var password=initValue.param2;
				var	 address= initValue.param3;
				var userTel=initValue.param4;
				var userName=initValue.param5;
				var nickName=initValue.param6;
				var email=initValue.param7;
				
				// 바인딩 해주기!
				console.log(initValue);
				var dMap = app.lookup("dm1");
				dMap.setValue("userId", userId);
				dMap.setValue("password", password);
				dMap.setValue("address", address);
				dMap.setValue("userTel", userTel);
				dMap.setValue("userName", userName);
				dMap.setValue("nickName", nickName);
				dMap.setValue("email", email);
				submission.send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms1SubmitSuccess2(e){
				var sms1 = e.control;
				var metadata = sms1.getMetadata("registerSuccess");
				//map의 키를 가져온다!
				
				console.log(metadata);
				// metadata가 true 일때 메타데이터를 닫아준다.
				if(metadata == "true"){
					app.close(metadata);
				}
				
			}

			/*
			 * "cancle" 버튼(no_btn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onNo_btnClick(e){
				var no_btn = e.control;
				var dialog = app.lookup("registerdialog");
				app.close();
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "password"},
					{"name": "address"},
					{"name": "userTel"},
					{"name": "userName"},
					{"name": "nickName"},
					{"name": "email"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "registerMember";
			submission_1.addRequestData(dataMap_1);
			if(typeof onSms1SubmitSuccess2 == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess2);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (min-width: 500px) and (max-width: 499px)", "new-screen");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("registerdialog");
			group_1.style.css({
				"background-color" : "#FFFFFF",
				"background-image" : "none"
			});
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("yes_btn");
				button_1.value = "yes";
				button_1.style.css({
					"background-color" : "#4682A9",
					"color" : "#F6F4EB",
					"font-weight" : "bold",
					"font-size" : "1.5rem",
					"background-image" : "none"
				});
				if(typeof onYes_btnClick == "function") {
					button_1.addEventListener("click", onYes_btnClick);
				}
				container.addChild(button_1, {
					"bottom": "1px",
					"left": "0px",
					"width": "250px",
					"height": "80px"
				});
				var button_2 = new cpr.controls.Button("no_btn");
				button_2.value = "cancle";
				button_2.style.css({
					"background-color" : "#F6F4EB",
					"color" : "#4682A9",
					"font-weight" : "bold",
					"font-size" : "1.5rem",
					"background-image" : "none"
				});
				if(typeof onNo_btnClick == "function") {
					button_2.addEventListener("click", onNo_btnClick);
				}
				container.addChild(button_2, {
					"right": "0px",
					"bottom": "1px",
					"width": "250px",
					"height": "80px"
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "회원가입을 하시겠습니까?";
				output_1.style.css({
					"font-weight" : "bold",
					"font-size" : "1.55rem",
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"top": "96px",
					"left": "72px",
					"width": "342px",
					"height": "120px"
				});
			})(group_1);
			if(typeof onGroupClick == "function") {
				group_1.addEventListener("click", onGroupClick);
			}
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "497px",
				"height": "346px"
			});
		}
	});
	app.title = "regiseterDialog";
	cpr.core.Platform.INSTANCE.register(app);
})();
