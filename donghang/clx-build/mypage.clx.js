/*
 * App URI: mypage
 * Source Location: mypage.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("mypage", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * mypage.js
			 * Created at 2023. 8. 21. 오전 11:48:25.
			 *
			 * @author leeheeeun
			 ************************************************/
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
			    var submission = app.lookup("sms1");
				var output= app.lookup("userName");
				submission.send();
			}
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms1SubmitSuccess(e){
				var sms1 = e.control;
				var output = app.lookup("userName");
				var responseText = sms1.xhr.responseText;
				var any = JSON.parse(responseText);
				output.value = any.loginSession.userName;
			}
			/*
			 * 내비게이션 바에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onNav1ItemClick(e){
				var nav1 = e.control;
				
				// 선택한 아이템에 대한 값 
				emded(e);
			}

			function emded(e){
				var vcEmb = app.lookup("ea1");
				var vsAppId = e.item.value;
				console.log(vsAppId);
					// 입력값에 선택된 앱이 존재하지 않는 경우
				if(vsAppId == null) {
					return alert("추가될 App이 존재하지 않습니다.");
				}
				
				/*앱을 로드하고 로드된 앱을 임베디드 앱에 설정합니다.*/
				cpr.core.App.load(vsAppId, function(/*cpr.core.App*/ loadedApp){
					/*임베디드앱에 안에 앱이 있는 경우에는 앱을 삭제해줍니다.(다시 앱을 열고싶을때 스크립트 작성)*/
					if(vcEmb.getEmbeddedAppInstance()){
						vcEmb.getEmbeddedAppInstance().dispose();
					}
					/*로드된 앱이 있는 경우에는 임베디드앱 안에 불러온 앱을 넣습니다.*/
					if(loadedApp){						
						/*초기값을 전달합니다.*/			
						vcEmb.ready(function(/*cpr.controls.EmbeddedApp*/embApp){
							
						})
						/*임베디드 앱에 내장할 앱을 로드하여 설정합니다*/
						vcEmb.app = loadedApp;
						var app = vcEmb.app;
						app.getInstances()
					}
				}); 
			}



			/*
			 * "회원정보수정" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				window.location.href="updateMember.clx";
			}

			/*
			 * "회원탈퇴" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				window.location.href="deleteMember.clx";
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds2");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "수강내역", "value": "appliedList"},
					{"label": "신청내역", "value": "applyingList"},
					{"label": "댓글 목록", "value": "commentList"},
					{"label": "좋아요 목록", "value": "LikeList"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds1");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "label",
						"dataType": "string"
					},
					{"name": "value"}
				],
				"rows": [
					{"label": "수강내역", "value": "appliedList"},
					{"label": "신청내역", "value": "applyList"},
					{"label": "댓글목록", "value": "commentList"},
					{"label": "좋아요목록", "value": "likeList"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("loginSession");
			dataMap_1.parseData({
				"columns" : [{"name": "userName"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "loginSessionMember";
			submission_1.addResponseData(dataMap_1, false);
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "new-screen");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("loginSession"));
			container.setBindContext(dataMapContext_1);
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			container.addChild(embeddedApp_1, {
				"top": "400px",
				"left": "20px",
				"width": "1880px",
				"height": "560px"
			});
			
			var navigationBar_1 = new cpr.controls.NavigationBar("nav1");
			(function(navigationBar_1){
				navigationBar_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(navigationBar_1);
			if(typeof onNav1ItemClick == "function") {
				navigationBar_1.addEventListener("item-click", onNav1ItemClick);
			}
			container.addChild(navigationBar_1, {
				"top": "230px",
				"left": "20px",
				"width": "1901px",
				"height": "140px"
			});
			
			var image_1 = new cpr.controls.Image();
			image_1.src = "theme/images/login_donghang.png";
			container.addChild(image_1, {
				"top": "79px",
				"left": "738px",
				"width": "80px",
				"height": "113px"
			});
			
			var output_1 = new cpr.controls.Output("userName");
			output_1.style.css({
				"font-weight" : "bold",
				"font-size" : "40px"
			});
			output_1.bind("value").toDataMap(app.lookup("loginSession"), "userName");
			container.addChild(output_1, {
				"top": "92px",
				"width": "215px",
				"height": "68px",
				"left": "calc(50% - 107px)"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "님 마이페이지";
			output_2.style.css({
				"font-weight" : "bold",
				"font-size" : "40px"
			});
			container.addChild(output_2, {
				"top": "92px",
				"left": "1088px",
				"width": "280px",
				"height": "68px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "회원정보수정";
			button_1.style.css({
				"background-color" : "#3389DE",
				"color" : "#FCFCFC",
				"font-weight" : "bold",
				"font-size" : "25px",
				"background-image" : "none",
				"font-style" : "normal"
			});
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"bottom": "18px",
				"left": "1457px",
				"width": "160px",
				"height": "64px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "회원탈퇴";
			button_2.style.css({
				"background-color" : "#3389DE",
				"color" : "#FCFCFC",
				"font-weight" : "bold",
				"font-size" : "25px",
				"background-image" : "none",
				"font-style" : "normal"
			});
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"bottom": "18px",
				"left": "1676px",
				"width": "140px",
				"height": "64px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "mypage";
	cpr.core.Platform.INSTANCE.register(app);
})();
