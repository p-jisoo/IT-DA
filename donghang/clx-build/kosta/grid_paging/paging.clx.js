/*
 * App URI: kosta/grid_paging/paging
 * Source Location: kosta/grid_paging/paging.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/grid_paging/paging", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * paging.js
			 * Created at 2023. 8. 17. 오후 5:11:42.
			 *
			 * @author USER
			 ************************************************/
			/**
			 * 페이지인덱서 컨트롤을 사용하여 그리드의 데이터를 페이징합니다.
			 * @param {Number} vnPageRow
			 */
			function gridPaging(vnPageRow) {
				var vcGridSample = app.lookup("grd1");
				var vcPageIndexer = app.lookup("page");
				
				/*  입력된 수로 페이지 인덱서의 pageRowCount를 지정합니다. */
				vcPageIndexer.pageRowCount = vnPageRow;
				vcPageIndexer.redraw();

				/* 페이징의 첫번째 행 번호와 마지막 행 번호를 지정합니다. */
				var currentPageIndex = vcPageIndexer.currentPageIndex;
				var startRowIndex = (currentPageIndex - 1) * vcPageIndexer.pageRowCount;
				var endRowIndex = currentPageIndex * vcPageIndexer.pageRowCount;
				
				/* 페이징이 될 때마다 그리드의 첫번째 행의 번호를 지정해줍니다. */
				vcGridSample.rowIndexerStartNum = (startRowIndex + 1);

				/* filter 조건을 통해 그리드를 페이징합니다. */
				//DataView는 데이터셋의 데이터를 이용하여 데이터 구조의 보기형식을 변경할 수 있는 데이터 객체.
			    //데이터셋의 데이터를 이용하여 필터, 정렬된 데이터 구조가 저장됩니다.
			    //그렇기 때문에 그리드에 데이터셋을 바인딩 하는게 아닌 dvTest 라는 하나의 데이터뷰를 만들어서 바인딩 합니다. 주의***
				vcGridSample.setFilter(startRowIndex + " < getIndex() && getIndex() <= " + endRowIndex);
				vcGridSample.redraw();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				// 조회를 했다는 시나리오 였습니다. 삭제하셔도됩니다 해당 스크립트는 
				//app.lookup("sms1").send();
				
				// 페이지 인덱서 컨트롤의 pageRowCount 속성을 이용하여 한페이지에 보여질 행의 수를 보낸다 default 값은 20 입니다. 한페이지에 20개씩 보인다는 의미 
				// 페이지 인덱서에 일반 속성에 totalCount를 익스프레션 바인딩으로 데이터셋의 총행의 수를 바인딩 먼저 해야합니다. 주의***
			    gridPaging(app.lookup("page").pageRowCount);

			}

			/*
			 * 페이지 인덱서에서 selection-change 이벤트 발생 시 호출.
			 * Page index를 선택하여 선택된 페이지가 변경된 후에 발생하는 이벤트.
			 */
			function onPageSelectionChange(e){
				
				/** 
				 * @type cpr.controls.PageIndexer
				 */
			      var page = e.control;
				
				gridPaging(page.pageRowCount);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsTest");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"},
					{"column1": "column14", "column2": "column24"},
					{"column1": "column15", "column2": "column25"},
					{"column1": "column16", "column2": "column26"},
					{"column1": "column17", "column2": "column27"},
					{"column1": "column18", "column2": "column28"},
					{"column1": "column19", "column2": "column29"},
					{"column1": "column110", "column2": "column210"},
					{"column1": "column111", "column2": "column211"},
					{"column1": "column112", "column2": "column212"},
					{"column1": "column113", "column2": "column213"},
					{"column1": "column114", "column2": "column214"},
					{"column1": "column115", "column2": "column215"},
					{"column1": "column116", "column2": "column216"},
					{"column1": "column117", "column2": "column217"},
					{"column1": "column118", "column2": "column218"},
					{"column1": "column119", "column2": "column219"},
					{"column1": "column120", "column2": "column220"},
					{"column1": "column121", "column2": "column221"},
					{"column1": "column122", "column2": "column222"},
					{"column1": "column123", "column2": "column223"},
					{"column1": "column124", "column2": "column224"},
					{"column1": "column125", "column2": "column225"},
					{"column1": "column126", "column2": "column226"},
					{"column1": "column127", "column2": "column227"},
					{"column1": "column128", "column2": "column228"},
					{"column1": "column129", "column2": "column229"},
					{"column1": "column130", "column2": "column230"},
					{"column1": "column131", "column2": "column231"},
					{"column1": "column132", "column2": "column232"},
					{"column1": "column133", "column2": "column233"},
					{"column1": "column134", "column2": "column234"},
					{"column1": "column135", "column2": "column235"},
					{"column1": "column136", "column2": "column236"},
					{"column1": "column137", "column2": "column237"},
					{"column1": "column138", "column2": "column238"},
					{"column1": "column139", "column2": "column239"},
					{"column1": "column140", "column2": "column240"},
					{"column1": "column141", "column2": "column241"},
					{"column1": "column142", "column2": "column242"},
					{"column1": "column143", "column2": "column243"},
					{"column1": "column144", "column2": "column244"},
					{"column1": "column145", "column2": "column245"},
					{"column1": "column146", "column2": "column246"},
					{"column1": "column147", "column2": "column247"},
					{"column1": "column148", "column2": "column248"},
					{"column1": "column149", "column2": "column249"},
					{"column1": "column150", "column2": "column250"},
					{"column1": "column151", "column2": "column251"},
					{"column1": "column152", "column2": "column252"},
					{"column1": "column153", "column2": "column253"},
					{"column1": "column154", "column2": "column254"},
					{"column1": "column155", "column2": "column255"},
					{"column1": "column156", "column2": "column256"},
					{"column1": "column157", "column2": "column257"},
					{"column1": "column158", "column2": "column258"},
					{"column1": "column159", "column2": "column259"},
					{"column1": "column160", "column2": "column260"},
					{"column1": "column161", "column2": "column261"},
					{"column1": "column162", "column2": "column262"},
					{"column1": "column163", "column2": "column263"},
					{"column1": "column164", "column2": "column264"},
					{"column1": "column165", "column2": "column265"},
					{"column1": "column166", "column2": "column266"},
					{"column1": "column167", "column2": "column267"},
					{"column1": "column168", "column2": "column268"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dvTest", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "../TwoGrid/testData.do";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms1SubmitSuccess2 == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess2);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dvTest"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "column1";
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "column2";
								cell.text = "column2";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "77px",
				"left": "92px",
				"width": "836px",
				"height": "567px"
			});
			
			var pageIndexer_1 = new cpr.controls.PageIndexer("page");
			pageIndexer_1.bind("totalRowCount").toExpression("#dsTest.getRowCount()");
			pageIndexer_1.init(1, 1, 1);
			if(typeof onPageSelectionChange == "function") {
				pageIndexer_1.addEventListener("selection-change", onPageSelectionChange);
			}
			container.addChild(pageIndexer_1, {
				"top": "669px",
				"left": "261px",
				"width": "508px",
				"height": "51px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "paging";
	cpr.core.Platform.INSTANCE.register(app);
})();
