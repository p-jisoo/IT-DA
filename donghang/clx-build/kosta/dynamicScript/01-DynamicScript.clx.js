/*
 * App URI: kosta/dynamicScript/01-DynamicScript
 * Source Location: kosta/dynamicScript/01-DynamicScript.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/dynamicScript/01-DynamicScript", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/*
			 * "동적 버튼 컨트롤 3개 추가" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				var btn1 = e.control;
				drawBtn();	

			}

			function drawBtn(){
				/*동적으로 생성될 버튼 컨트롤이 위치할 그룹컨트롤*/	
				var xyGroup = app.lookup("grpLayout1");
				/*그리그전에 해당 레이아웃에 있는 모든 컨트롤을 제거합니다.*/
				xyGroup.removeAllChildren();
				for(var i = 0; i < 3; i++){
					/*버튼 컨트롤 동적 생성*/
					var vcbtn = new cpr.controls.Button("btn-"+i);
					vcbtn.value = "버튼" + i;
					/*해당 그룹에 컨트롤을 추가합니다. 이때 각 레이아웃에 맞는 constraint을 작성해줘야합니다.*/
					xyGroup.addChild(vcbtn, {
						top : 20 + ((i) * 40) + "px",
						left : "20px",
						width : "100px",
						height : "30px"
					});
				}
			}

			/*
			 * "동적 컨트롤 위치 이동" 버튼(button3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton3Click(e){
				var button3 = e.control;
				
				moveBtn();
				
			}

			function moveBtn(){
				/* 버튼 컨트롤의 이전 배치에 top, left 앵커가 고정되어 있고, bottom과 right 앵커를 주고 싶을 경우 top과 left 앵커에 빈 값을 주어야 합니다. */
				/* XY 레이아웃 컨트롤 위치 변경 */
				app.lookup("grpLayout1").updateConstraint(app.lookup("btn-0"), {
					top : "",
					left : "",
					bottom : "20px",
					right : "20px",
					height : "30px",
					width : "100px"
				});
			}

			/*
			 * "그리드 컨트롤 동적 생성" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e) {
				var btn2 = e.control;
				gridDraw();
				
				
			}

			function gridDraw() {
				var vcGridInfo = {
					dataSet: "",
					columns: [],
					header: {},
					detail: {}
				}	
				var vcDataSet = app.lookup("ds1");
				
				/*그리드 동적으로 생성합니다*/	
				
				/*dataSet 설정*/
				vcGridInfo.dataSet = vcDataSet;
				
				var vaColumns = [];
				/*컬럼 너비 배열*/
				for (var i = 0; i < vcDataSet.getHeaders().length; i++) {
					vaColumns.push({
						"width": "100px"
					});
				}
				vcGridInfo.columns = vaColumns;
				vcGridInfo.header.rows = [{
					"height": "30px"
				}];
				/*헤더 영역 추가*/
				var vaHeaders = [];
				for (var i = 0; i < vcDataSet.getHeaders().length; i++) {
					var columnNm = "column" + (i + 1);
					(function(columnNm) {
						vaHeaders.push({
							"constraint": {
								"rowIndex": 0,
								"colIndex": i
							},
							"configurator": function(cell) {
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = columnNm;
								cell.text = columnNm;
							}
						});
					})(columnNm)
				};
				vcGridInfo.header.cells = vaHeaders;
				/*디테일 영역 추가*/
				vcGridInfo.detail.rows = [{
					"height": "30px"
				}];
				var vaDetail = [];
				for (var i = 0; i < vcDataSet.getHeaders().length; i++) {
					var columnNm = "column" + (i + 1);
					(function(columnNm) {
						vaDetail.push({
							"constraint": {
								"rowIndex": 0,
								"colIndex": i
							},
							"configurator": function(cell) {
								cell.columnName = columnNm;
							}
						});
					})(columnNm)
				}
				vcGridInfo.detail.cells = vaDetail;
				var grid = new cpr.controls.Grid("grd001");
				/*그리드 속성 설정을 세팅한다*/
				grid.init(vcGridInfo);
				app.lookup("grpLayout2").addChild(grid, {
					autoSize: "none",
					height: "150px"
				});
				
				
			}

			/*
			 * "컨트롤 삭제" 버튼(button2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton2Click(e){
				var button2 = e.control;
				
				removeLastChild();
				
			}

			function removeLastChild(){
				var vcGrp = app.lookup("grpLayout2");
				vcGrp.removeChild(vcGrp.getChildren()[vcGrp.getChildren().length-1]);
				
			}

			///*
			// * "udc 컨트롤 동적 생성" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			// */
			//function onBtn3Click(e){
			//	var btn3 = e.control;
			//	
			//	drawUdc();
			//	app.lookup("ace3").value = drawUdc;	
			//	
			//}
			//
			//function drawUdc(){
			//	
			//	for (var i = 0; i < 3; i++) {
			//		var vcInputUdc = new udc.sample.udcInputBtn();
			//		vcInputUdc.title = "title_" + i;
			//		vcInputUdc.date = moment().format("YYYY-MM-DD");
			//		vcInputUdc.style.css("border", "1px solid black");
			//		vcInputUdc.addEventListener("btn-Click", function(e){
			//			alert(JSON.stringify(e.userData));
			//		});
			//		app.lookup("grpLayout3").addChild(vcInputUdc, {
			//			autoSize: "height",
			//			height: "40px"
			//		});
			//	}
			//}

			///*
			// * "udc 컨트롤 전체 삭제" 버튼(button4)에서 click 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			// */
			//function onButton4Click(e){
			//	var button4 = e.control;
			//	removeAllChildren();
			//		
			//}
			//
			//function removeAllChildren(){
			//	app.lookup("grpLayout3").removeAllChildren();;
			//}

			/*
			 * "동적 폼 레이아웃 생성" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(e){
				
				createFormLayout();
				
					
				
			}

			function createFormLayout(){
				
				/* 폼 레이아웃으로 레이아웃 변경 */
				var formLayout = new cpr.controls.layouts.FormLayout();
				formLayout.scrollable = true;
				formLayout.userResizingMode = "standard";
				formLayout.topMargin = "5px";
				formLayout.rightMargin = "5px";
				formLayout.bottomMargin = "5px";
				formLayout.leftMargin = "5px";
				formLayout.horizontalSpacing = "10px";
				formLayout.verticalSpacing = "10px";
				formLayout.horizontalSeparatorWidth = 1;
				formLayout.verticalSeparatorWidth = 1;
				formLayout.setColumns(["100px", "1fr", "100px", "1fr"]);
				formLayout.setUseColumnShade(0, true);
				formLayout.setUseColumnShade(2, true);
				formLayout.setColumnAutoSizing(2, true);
				formLayout.setRows(["30px", "30px", "30px", "30px", "1fr"]);
				var formGroup = app.lookup("grpForm");
				formGroup.setLayout(formLayout);
				formGroup.style.setClasses(["content-form-box"]);
				
				/* 컨트롤 동적 생성 및 grpForm 그룹에 동적으로 생성한 컨트롤 추가 */
				var output_3 = new cpr.controls.Output();
				output_3.value = "Output";
				formGroup.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "Output";
				formGroup.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "Output";
				formGroup.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "Output";
				formGroup.addChild(output_6, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var output_7 = new cpr.controls.Output();
				output_7.value = "horizontalAlign/verticalAlign 지정";
				output_7.style.css({
					"text-align": "right"
				});
				formGroup.addChild(output_7, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_8 = new cpr.controls.Output();
				output_8.value = "spacings 지정";
				output_8.style.css({
					"text-align": "right"
				});
				formGroup.addChild(output_8, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var output_9 = new cpr.controls.Output();
				output_9.value = "버튼2 위치 변경시 배치";
				output_9.style.css({
					"text-align": "right"
				});
				formGroup.addChild(output_9, {
					"colIndex": 2,
					"rowIndex": 4
				});
				var output_10 = new cpr.controls.Output();
				output_10.value = "ignoreLayoutSpacing 지정";
				output_10.style.css({
					"text-align": "right"
				});
				formGroup.addChild(output_10, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var output_11 = new cpr.controls.Output();
				output_11.value = "기본 배치";
				output_11.style.css({
					"text-align": "right"
				});
				formGroup.addChild(output_11, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_12 = new cpr.controls.Output();
				output_12.value = "Output";
				formGroup.addChild(output_12, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "버튼1";
				button_1.style.setClasses(["btn-success"]);
				formGroup.addChild(button_1, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button("button");
				button_2.value = "버튼2";
				button_2.style.setClasses(["btn-info"]);
				formGroup.addChild(button_2, {
					"colIndex": 3,
					"rowIndex": 1,
					"horizontalAlign": "center",
					"verticalAlign": "center"
				});
				var button_3 = new cpr.controls.Button();
				button_3.value = "버튼3";
				button_3.style.setClasses(["btn-warning"]);
				formGroup.addChild(button_3, {
					"colIndex": 3,
					"rowIndex": 2,
					"ignoreLayoutSpacing": true
				});
				var button_4 = new cpr.controls.Button();
				button_4.value = "버튼4";
				button_4.style.setClasses(["btn-danger"]);
				formGroup.addChild(button_4, {
					"colIndex": 3,
					"rowIndex": 3,
					"topSpacing": 0,
					"rightSpacing": 10,
					"bottomSpacing": 0,
					"leftSpacing": 10
				});
				for (var i = 0; i < 5; i++) {
					var vcIpb = new cpr.controls.InputBox();
					vcIpb.value = "inputbox" + (i + 1);
					formGroup.addChild(vcIpb, {
						colIndex: 1,
						rowIndex: i
					});
				}
				
			}


			/*
			 * ""버튼2" 컨트롤 위치 변경" 버튼(button1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton1Click(e){
				var button1 = e.control;
				moveControl();
					
			}

			function moveControl(){
				/* 폼 레이아웃 컨트롤 위치 변경 */
				app.lookup("grpForm").updateConstraint(app.lookup("button"), {
					colIndex: 3,
					rowIndex: 4
				});
			}

			/*
			 * "두번째 행 숨김" 버튼(button5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton5Click(e){
				var button5 = e.control;
				setRowVisible();
					
			}

			function setRowVisible(){
				
				var vcGrp = app.lookup("grpForm");
				var vcBtn = app.lookup("button4");
				
				/* 폼 레이아웃 지정하기 이전에 validataion 체크 */
				if (vcGrp.getLayout() instanceof cpr.controls.layouts.XYLayout) return;
				
				/* 폼 레이아웃으로 타입 강제 지정 */
				/** @type cpr.controls.layouts.FormLayout */
				var vlGrp = vcGrp.getLayout();
				
				/* 폼 레이아웃 행 visible 처리 */
				if (vlGrp.isRowVisible(1)) {
					vlGrp.setRowVisible(1, false);
					//vcBtn.value = "이전으로 변경";
				} else {
					vlGrp.setRowVisible(1, true);
					//vcBtn.value = "두번째 행 숨김";
				}
			}

			/*
			 * "동적 XY 레이아웃 생성" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click3(e){
				var btn4 = e.control;
				/* XY 레이아웃으로 레이아웃 변경 */
				var xyLayout = new cpr.controls.layouts.XYLayout();
				var xyGroup = app.lookup("grpXy");
				xyGroup.setLayout(xyLayout);

				for (var i = 1 ; i <= 3 ; i++) {
					
					/* 컨트롤 동적 생성  */
					var vcBtn = new cpr.controls.Button("btn" + i);
					vcBtn.value = "버튼" + i;
					
					/* grpXy 그룹에 동적으로 생성한 버튼 추가 */
					app.lookup("grpXy").addChild( vcBtn, {
						top : 20 + ((i-1) * 40) + "px",
						left : "20px",
						width : "100px",
						height : "30px"
					});
				}
			}

			/*
			 * ""버튼1" 컨트롤 위치 변경" 버튼(button5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton5Click3(e){
				var button5 = e.control;
				/* 버튼 컨트롤의 이전 배치에 top, left 앵커가 고정되어 있고, bottom과 right 앵커를 주고 싶을 경우 top과 left 앵커에 빈 값을 주어야 합니다. */
				/* XY 레이아웃 컨트롤 위치 변경 */
				app.lookup("grpXy").updateConstraint(app.lookup("btn1"), {
					top : "",
					left : "",
					bottom : "20px",
					right : "20px",
					height : "30px",
					width : "100px"
				});
			}

			/*
			 * "동적 반응형 XY 레이아웃 생성" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(e){
				var btn5 = e.control;
				/* 반응형 XY 레이아웃으로 레이아웃 변경 */
				var responsiveXYLayout = new cpr.controls.layouts.ResponsiveXYLayout();
				var resXyGroup = app.lookup("grpResXy");
				resXyGroup.setLayout(responsiveXYLayout);
				
				for (var i = 1 ; i <= 3 ; i++) {
					
					/* 컨트롤 동적 생성  */
					var vcBtn = new cpr.controls.Button("btnXY" + i);
					vcBtn.value = "버튼" + i;
					
					/* grpResXy 그룹에 동적으로 생성한 버튼 추가 */
					resXyGroup.addChild(vcBtn, {
						positions : [
							{
								"media": "all and (min-width: 1280px)",
								top : 20 + ((i-1) * 40) + "px",
								left : "20px",
								width : "200px",
								height : "30px"
							}, {
								"media": "all and (min-width: 800px) and (max-width: 1279px)",
								top : 20 + ((i-1) * 40) + "px",
								left : "20px",
								width : "100px",
								height : "30px"
							}, {
								"media": "all and (max-width: 799px)",
								"top": "105px",
								"left": "130px",
								"width": "113px",
								"height": "112px"
							} 
						]
					});
				}
			}

			/*
			 * ""버튼1" 컨트롤 위치 변경" 버튼(button6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton6Click(e){
				var button6 = e.control;
					/* 반응형 XY 레이아웃 컨트롤 위치 변경 */
				app.lookup("grpResXy").updateConstraint(app.lookup("btnXY1"), {
					positions : [
						{
							 /* 스크린에 지정된 미디어 쿼리 default */
			                "media": "all and (min-width: 1280px)",
							top : "",
							left : "",
							bottom : "20px",
							right : "20px",
							width : "200px",
							height : "30px"
						}, {
							  /* 스크린에 지정된 미디어 쿼리 tablet */
			               "media": "all and (min-width: 800px) and (max-width: 1279px)",
							top : "",
							left : "",
							bottom : "20px",
							right : "20px",
							width : "100px",
							height : "30px"
						}, {
			                /* 스크린에 지정된 미디어 쿼리 mobile */
			               "media": "all and (max-width: 799px)",
			                top : "",
							left : "",
			                bottom : "20px",
							right : "20px",
							width : "50px",
							height : "30px"
			            }
					]
				});
			}

			/*
			 * "동적 폼 레이아웃 생성" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(e){
				var btn6 = e.control;
				
			}

			/*
			 * "동적 버티컬 레이아웃 생성" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(e){
				var btn7 = e.control;
				/* 버티컬 레이아웃으로 레이아웃 변경 */
				var verticalLayout = new cpr.controls.layouts.VerticalLayout();
				verticalLayout.bottomMargin = 10;
				verticalLayout.leftMargin = 10;
				verticalLayout.topMargin = 10;
				verticalLayout.rightMargin = 10;
				
				var vGroup = app.lookup("grpVertical");
				vGroup.setLayout(verticalLayout);
				
				for (var i = 1 ; i <= 3 ; i++) {
					
					/* 컨트롤 동적 생성  */
					var vcBtn = new cpr.controls.Button();
					vcBtn.value = "버튼" + i;
					
					/* grpVertical 그룹에 동적으로 생성한 버튼 추가 */
					vGroup.addChild( vcBtn, {
						width : "100px",
						height : "30px",
						autoSize : "width"
					});
				}
			}

			/*
			 * "그룹에 첫번째 자식으로 컨트롤 추가" 버튼(button8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton8Click(e){
				var button8 = e.control;
				var vcIpb = new cpr.controls.InputBox();
				vcIpb.value = "그룹에 첫번째 자식으로 추가된 인풋박스";
				
				/* 버티컬 레이아웃 특정 인덱스에 컨트롤 추가 */
				app.lookup("grpVertical").insertChild(0, vcIpb, {
					width : "300px",
					height : "30px",
					autoSize : "none"
				});
			}

			/*
			 * "그룹에 마지막 자식으로 컨트롤 추가" 버튼(button9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton9Click(e){
				var button9 = e.control;
				var vcIpb = new cpr.controls.InputBox();
				vcIpb.value = "그룹에 마지막 자식으로 추가된 인풋박스";
				
				/* 버티컬 레이아웃 마지막 인덱스에 컨트롤 추가 */
				app.lookup("grpVertical").addChild(vcIpb, {
					width : "300px",
					height : "30px",
					autoSize : "none"
				});
			}

			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCombobox1SelectionChange(e){
				var combobox1 = e.control;
				
				/** @type cpr.controls.layouts.VerticalLayout */	
				var vlGrpVertical = app.lookup("grpVertical").getLayout();
				
				/* 버티컬 레이아웃 컨트롤 배치 */
				vlGrpVertical.distribution = combobox1.value;
			}

			/*
			 * "동적 플로우 레이아웃 생성" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(e){
				var btn8 = e.control;
				/* 플로우 레이아웃으로 레이아웃 변경 */
				var flowLayout = new cpr.controls.layouts.FlowLayout();
				var fGroup = app.lookup("grpFlow");
				fGroup.setLayout(flowLayout);
				
				for (var i = 1 ; i <= 10 ; i++) {
					
					/* 컨트롤 동적 생성  */
					var vcBtn = new cpr.controls.Button("btnFlow" + i);
					vcBtn.value = "버튼" + i;
					
					/* grpFlow 그룹에 동적으로 생성한 버튼 추가 */
					fGroup.addChild( vcBtn, {
						width : "100px",
						height : "30px",
						autoSize : "none",
						allowNewLine : true
					});
				}
			}

			/*
			 * "그룹에 첫번째 자식으로 컨트롤 추가" 버튼(button10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton10Click(e){
				var button10 = e.control;
				var vcIpb = new cpr.controls.InputBox();
				vcIpb.value = "그룹에 첫번째 자식으로 추가된 인풋박스";
				
				/* 플로우 레이아웃 특정 인덱스에 컨트롤 추가 */
				app.lookup("grpFlow").insertChild(0, vcIpb, {
					width : "300px",
					height : "30px",
					autoSize : "none"
				});
			}

			/*
			 * ""버튼5" 컨트롤 줄 바꿈 허용안함" 버튼(button11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton11Click(e){
				var button11 = e.control;
				var vcGrp = app.lookup("grpFlow");
				var vcBtn = app.lookup("btnFlow5");
				var vbAllowNewLine = false;
				
				if (!vcGrp.getConstraint(vcBtn)) return;
				
				vbAllowNewLine = vcGrp.getConstraint(vcBtn).allowNewLine == true ? false : true;
				
				if (!vbAllowNewLine) app.lookup("button9").value = "\"버튼5\" 컨트롤 줄 바꿈 허용";
				else app.lookup("button9").value = "\"버튼5\" 컨트롤 줄 바꿈 허용안함";
				
				/* 플로우 레이아웃 특정 컨트롤 줄바꿈 허용 여부 */
				vcGrp.updateConstraint(vcBtn, {
					allowNewLine : vbAllowNewLine
				});
				
				vcBtn.style.css({
						"background-color" : "red",
						"border" : "none",
						"color" : "yellow"
					});
					
				vcGrp.redraw();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
			//	var vcShlAce = app.lookup("ace4");
			//	app.lookup("btn1").addEventListener("click", function(e){
			//		vcShlAce.value = onBtn1Click;
			//	});
			//	
			//	app.lookup("button3").addEventListener("click", function(e){
			//		vcShlAce.value = onButton3Click;
			//	});
			//	
			//	app.lookup("btn2").addEventListener("click", function(e){
			//		vcShlAce.value = onBtn2Click;
			//	});
			//	
			//	app.lookup("button2").addEventListener("click", function(e){
			//		vcShlAce.value = onButton2Click;
			//	});
			//	
			//	app.lookup("btn3").addEventListener("click", function(e){
			//		vcShlAce.value = onBtn3Click;
			//	});
			//	
			//	app.lookup("button1").addEventListener("click", function(e){
			//		vcShlAce.value = moveControl;
			//	});
			//	
			//	app.lookup("button4").addEventListener("click", function(e){
			//		vcShlAce.value = onButton4Click;
			//	});
			//	
			//	app.lookup("btn4").addEventListener("click", function(e){
			//		vcShlAce.value = onBtn4Click3;
			//	});
			//	
			//	app.lookup("button5").addEventListener("click", function(e){
			//		vcShlAce.value = onButton5Click3;
			//	});
			//	
			//	app.lookup("button6").addEventListener("click", function(e){
			//		vcShlAce.value = onButton6Click;
			//	});
			//	
			//	app.lookup("combobox1").addEventListener("selection-change", function(e){
			//		vcShlAce.value = onCombobox1SelectionChange;
			//	});
			//	
			//	app.lookup("btn5").addEventListener("click", function(e){
			//		vcShlAce.value = onBtn5Click;
			//	});
			//	
			//	app.lookup("button7").addEventListener("click", function(e){
			//		vcShlAce.value = setRowVisible;
			//	});
			//	
			//	app.lookup("button9").addEventListener("click", function(e){
			//		vcShlAce.value = onButton9Click;
			//	});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "column4": "column46", "column5": "column56"}
				]
			});
			app.register(dataSet_1);
			app.supportMedia("all and (min-width: 1280px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1279px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["subpage"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 25;
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "컨트롤을 미리 그려놓는것이 아니라 동적으로 컨트롤들을 화면에 추가하거나 컨트롤을 이동시킬 수 있습니다.\r\n디자인탭에서 마우스 우클릭 보기 컴파일된 결과보기를 통해 해당 컨트롤의 추가방식을 스크립트로 확인할 수 있습니다.";
			container.addChild(output_1, {
				"autoSize": "height",
				"width": "1240px",
				"height": "48px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 10;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grp2");
				group_2.style.setClasses(["content-box"]);
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 10;
				verticalLayout_3.leftMargin = 20;
				verticalLayout_3.rightMargin = 20;
				verticalLayout_3.topMargin = 20;
				verticalLayout_3.bottomMargin = 20;
				group_2.setLayout(verticalLayout_3);
				(function(container){
					var output_2 = new cpr.controls.Output("opt4");
					output_2.value = "버튼 컨트롤 동적생성";
					output_2.style.setClasses(["content-tit"]);
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "100px",
						"height": "26px"
					});
					var group_3 = new cpr.controls.Container("grp3");
					group_3.style.setClasses(["card"]);
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_4.spacing = 5;
					verticalLayout_4.leftMargin = 20;
					verticalLayout_4.rightMargin = 20;
					verticalLayout_4.topMargin = 20;
					verticalLayout_4.bottomMargin = 20;
					group_3.setLayout(verticalLayout_4);
					(function(container){
						var output_3 = new cpr.controls.Output("opt5");
						output_3.value = "\u2022 스크립트를 통해 다수의 컨트롤을 동적으로 생성할 수 있습니다.";
						output_3.style.setClasses(["opt-tmpl"]);
						container.addChild(output_3, {
							"autoSize": "height",
							"width": "1158px",
							"height": "44px"
						});
						var group_4 = new cpr.controls.Container("group5");
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.scrollable = false;
						formLayout_1.topMargin = "5px";
						formLayout_1.rightMargin = "5px";
						formLayout_1.bottomMargin = "5px";
						formLayout_1.leftMargin = "5px";
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.setColumns(["1fr", "193px", "193px"]);
						formLayout_1.setColumnAutoSizing(1, true);
						formLayout_1.setColumnAutoSizing(2, true);
						formLayout_1.setRows(["30px"]);
						group_4.setLayout(formLayout_1);
						(function(container){
							var button_1 = new cpr.controls.Button("button3");
							button_1.value = "버튼0 위치 이동";
							button_1.style.setClasses(["btn-dark"]);
							button_1.style.css({
								"padding-left" : "10px",
								"padding-right" : "10px"
							});
							if(typeof onButton3Click == "function") {
								button_1.addEventListener("click", onButton3Click);
							}
							container.addChild(button_1, {
								"colIndex": 2,
								"rowIndex": 0,
								"verticalAlign": "fill"
							});
							var button_2 = new cpr.controls.Button("btn1");
							button_2.value = "동적 버튼 컨트롤 3개 추가";
							button_2.style.setClasses(["btn-gray"]);
							if(typeof onBtn1Click == "function") {
								button_2.addEventListener("click", onBtn1Click);
							}
							container.addChild(button_2, {
								"colIndex": 1,
								"rowIndex": 0,
								"verticalAlign": "fill"
							});
						})(group_4);
						container.addChild(group_4, {
							"autoSize": "none",
							"width": "1212px",
							"height": "40px"
						});
						var group_5 = new cpr.controls.Container("grpLayout1");
						group_5.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#cccccc",
							"border-right-width" : "1px",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-left-color" : "#cccccc",
							"border-top-color" : "#cccccc",
							"border-bottom-style" : "solid",
							"border-right-color" : "#cccccc",
							"border-left-width" : "1px",
							"border-top-style" : "solid"
						});
						var xYLayout_1 = new cpr.controls.layouts.XYLayout();
						group_5.setLayout(xYLayout_1);
						container.addChild(group_5, {
							"width": "400px",
							"height": "150px"
						});
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "height",
						"width": "400px",
						"height": "671px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "400px",
					"height": "806px"
				});
				var group_6 = new cpr.controls.Container("grp4");
				group_6.style.setClasses(["content-box"]);
				var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_5.spacing = 10;
				verticalLayout_5.leftMargin = 20;
				verticalLayout_5.rightMargin = 20;
				verticalLayout_5.topMargin = 20;
				verticalLayout_5.bottomMargin = 20;
				group_6.setLayout(verticalLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output("opt6");
					output_4.value = "그리드 컨트롤 동적 생성";
					output_4.style.setClasses(["content-tit"]);
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "100px",
						"height": "26px"
					});
					var group_7 = new cpr.controls.Container("grp5");
					group_7.style.setClasses(["card"]);
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 5;
					verticalLayout_6.leftMargin = 20;
					verticalLayout_6.rightMargin = 20;
					verticalLayout_6.topMargin = 20;
					verticalLayout_6.bottomMargin = 20;
					group_7.setLayout(verticalLayout_6);
					(function(container){
						var output_5 = new cpr.controls.Output("opt7");
						output_5.value = "\u2022 데이터셋 ds1 데이터를 보여주는 그리드컨트롤 동적 생성\r\n\u2022 컴파일된 결과보기에서 나오는 형태를 스크립트로 작성하여 동적 생성 가능";
						output_5.style.setClasses(["opt-tmpl"]);
						container.addChild(output_5, {
							"autoSize": "height",
							"width": "100px",
							"height": "94px"
						});
						var group_8 = new cpr.controls.Container("group2");
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.scrollable = false;
						formLayout_2.topMargin = "5px";
						formLayout_2.rightMargin = "5px";
						formLayout_2.bottomMargin = "5px";
						formLayout_2.leftMargin = "5px";
						formLayout_2.horizontalSpacing = "5px";
						formLayout_2.setColumns(["1fr", "193px", "193px"]);
						formLayout_2.setColumnAutoSizing(1, true);
						formLayout_2.setColumnAutoSizing(2, true);
						formLayout_2.setRows(["30px"]);
						group_8.setLayout(formLayout_2);
						(function(container){
							var button_3 = new cpr.controls.Button("button2");
							button_3.value = "그리드 컨트롤 삭제";
							button_3.style.setClasses(["btn-dark"]);
							button_3.style.css({
								"padding-left" : "10px",
								"padding-right" : "10px"
							});
							if(typeof onButton2Click == "function") {
								button_3.addEventListener("click", onButton2Click);
							}
							container.addChild(button_3, {
								"colIndex": 2,
								"rowIndex": 0,
								"verticalAlign": "fill"
							});
							var button_4 = new cpr.controls.Button("btn2");
							button_4.value = "그리드 컨트롤 동적 생성";
							button_4.style.setClasses(["btn-gray"]);
							if(typeof onBtn2Click == "function") {
								button_4.addEventListener("click", onBtn2Click);
							}
							container.addChild(button_4, {
								"colIndex": 1,
								"rowIndex": 0,
								"verticalAlign": "fill"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "none",
							"width": "1158px",
							"height": "40px"
						});
						var group_9 = new cpr.controls.Container("grpLayout2");
						group_9.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#cccccc",
							"border-right-width" : "1px",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-left-color" : "#cccccc",
							"border-top-color" : "#cccccc",
							"border-bottom-style" : "solid",
							"border-right-color" : "#cccccc",
							"border-left-width" : "1px",
							"border-top-style" : "solid"
						});
						var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
						group_9.setLayout(verticalLayout_7);
						container.addChild(group_9, {
							"autoSize": "height",
							"width": "1158px",
							"height": "150px",
							"minHeight": 150
						});
					})(group_7);
					container.addChild(group_7, {
						"autoSize": "height",
						"width": "400px",
						"height": "673px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "height",
					"width": "1240px",
					"height": "745px"
				});
				var group_10 = new cpr.controls.Container("grp8");
				group_10.style.setClasses(["content-box"]);
				var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_8.spacing = 10;
				verticalLayout_8.leftMargin = 20;
				verticalLayout_8.rightMargin = 20;
				verticalLayout_8.topMargin = 20;
				verticalLayout_8.bottomMargin = 20;
				group_10.setLayout(verticalLayout_8);
				(function(container){
					var output_6 = new cpr.controls.Output("opt8");
					output_6.value = "동적 레이아웃 생성 및 컨스트레인트 지정";
					output_6.style.setClasses(["content-tit"]);
					container.addChild(output_6, {
						"autoSize": "height",
						"width": "100px",
						"height": "26px"
					});
					var group_11 = new cpr.controls.Container("grp9");
					group_11.style.setClasses(["card"]);
					var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_9.spacing = 5;
					verticalLayout_9.leftMargin = 20;
					verticalLayout_9.rightMargin = 20;
					verticalLayout_9.topMargin = 20;
					verticalLayout_9.bottomMargin = 20;
					group_11.setLayout(verticalLayout_9);
					(function(container){
						var output_7 = new cpr.controls.Output("opt9");
						output_7.value = "\u2022 특정 레이아웃도 동적으로 생성하여 특정 위치에 컨트롤을 배치할 수 있습니다.";
						output_7.style.setClasses(["opt-tmpl"]);
						container.addChild(output_7, {
							"autoSize": "height",
							"width": "100px",
							"height": "61px"
						});
						var tabFolder_1 = new cpr.controls.TabFolder("tab1");
						
						var tabItem_1 = (function(tabFolder){
							var tabItem_1 = new cpr.controls.TabItem();
							tabItem_1.text = "XY 레이아웃";
							var group_12 = new cpr.controls.Container("grp10");
							var xYLayout_2 = new cpr.controls.layouts.XYLayout();
							group_12.setLayout(xYLayout_2);
							(function(container){
								var group_13 = new cpr.controls.Container("group4");
								var formLayout_3 = new cpr.controls.layouts.FormLayout();
								formLayout_3.scrollable = false;
								formLayout_3.topMargin = "5px";
								formLayout_3.rightMargin = "5px";
								formLayout_3.bottomMargin = "5px";
								formLayout_3.leftMargin = "5px";
								formLayout_3.horizontalSeparatorWidth = 1;
								formLayout_3.verticalSeparatorWidth = 1;
								formLayout_3.setColumns(["1fr"]);
								formLayout_3.setRows(["40px", "1fr"]);
								group_13.setLayout(formLayout_3);
								(function(container){
									var group_14 = new cpr.controls.Container("grpXy");
									group_14.style.setClasses(["border", "bg-gray-dim", "layoutEx"]);
									var xYLayout_3 = new cpr.controls.layouts.XYLayout();
									group_14.setLayout(xYLayout_3);
									container.addChild(group_14, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_15 = new cpr.controls.Container("group6");
									var formLayout_4 = new cpr.controls.layouts.FormLayout();
									formLayout_4.scrollable = false;
									formLayout_4.topMargin = "5px";
									formLayout_4.rightMargin = "5px";
									formLayout_4.bottomMargin = "5px";
									formLayout_4.leftMargin = "5px";
									formLayout_4.horizontalSpacing = "5px";
									formLayout_4.setColumns(["1fr", "193px", "193px"]);
									formLayout_4.setColumnAutoSizing(1, true);
									formLayout_4.setColumnAutoSizing(2, true);
									formLayout_4.setRows(["30px"]);
									group_15.setLayout(formLayout_4);
									(function(container){
										var button_5 = new cpr.controls.Button("button5");
										button_5.value = "\"버튼1\" 컨트롤 위치 변경";
										button_5.style.setClasses(["btn-dark"]);
										button_5.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton5Click3 == "function") {
											button_5.addEventListener("click", onButton5Click3);
										}
										container.addChild(button_5, {
											"colIndex": 2,
											"rowIndex": 0,
											"verticalAlign": "fill"
										});
										var button_6 = new cpr.controls.Button("btn4");
										button_6.value = "동적 XY 레이아웃 생성";
										button_6.style.setClasses(["btn-gray"]);
										if(typeof onBtn4Click3 == "function") {
											button_6.addEventListener("click", onBtn4Click3);
										}
										container.addChild(button_6, {
											"colIndex": 1,
											"rowIndex": 0,
											"verticalAlign": "fill"
										});
									})(group_15);
									container.addChild(group_15, {
										"colIndex": 0,
										"rowIndex": 0,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_13);
								container.addChild(group_13, {
									"top": "0px",
									"right": "0px",
									"bottom": "0px",
									"left": "0px"
								});
							})(group_12);
							tabItem_1.content = group_12;
							return tabItem_1;
						})(tabFolder_1);
						tabFolder_1.addTabItem(tabItem_1);
						
						var tabItem_2 = (function(tabFolder){
							var tabItem_2 = new cpr.controls.TabItem();
							tabItem_2.text = "반응형 XY 레이아웃";
							var group_16 = new cpr.controls.Container("grp11");
							var xYLayout_4 = new cpr.controls.layouts.XYLayout();
							group_16.setLayout(xYLayout_4);
							(function(container){
								var group_17 = new cpr.controls.Container("group7");
								var formLayout_5 = new cpr.controls.layouts.FormLayout();
								formLayout_5.scrollable = false;
								formLayout_5.topMargin = "5px";
								formLayout_5.rightMargin = "5px";
								formLayout_5.bottomMargin = "5px";
								formLayout_5.leftMargin = "5px";
								formLayout_5.horizontalSeparatorWidth = 1;
								formLayout_5.verticalSeparatorWidth = 1;
								formLayout_5.setColumns(["1fr"]);
								formLayout_5.setRows(["40px", "1fr"]);
								group_17.setLayout(formLayout_5);
								(function(container){
									var group_18 = new cpr.controls.Container("grpResXy");
									group_18.style.setClasses(["border", "bg-gray-dim", "layoutEx"]);
									var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
									group_18.setLayout(responsiveXYLayout_1);
									container.addChild(group_18, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_19 = new cpr.controls.Container("group8");
									var formLayout_6 = new cpr.controls.layouts.FormLayout();
									formLayout_6.scrollable = false;
									formLayout_6.topMargin = "5px";
									formLayout_6.rightMargin = "5px";
									formLayout_6.bottomMargin = "5px";
									formLayout_6.leftMargin = "5px";
									formLayout_6.horizontalSpacing = "5px";
									formLayout_6.setColumns(["1fr", "193px", "193px"]);
									formLayout_6.setColumnAutoSizing(1, true);
									formLayout_6.setColumnAutoSizing(2, true);
									formLayout_6.setRows(["30px"]);
									group_19.setLayout(formLayout_6);
									(function(container){
										var button_7 = new cpr.controls.Button("button6");
										button_7.value = "\"버튼1\" 컨트롤 위치 변경";
										button_7.style.setClasses(["btn-dark"]);
										button_7.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton6Click == "function") {
											button_7.addEventListener("click", onButton6Click);
										}
										container.addChild(button_7, {
											"colIndex": 2,
											"rowIndex": 0
										});
										var button_8 = new cpr.controls.Button("btn5");
										button_8.value = "동적 반응형 XY 레이아웃 생성";
										button_8.style.setClasses(["btn-gray"]);
										if(typeof onBtn5Click == "function") {
											button_8.addEventListener("click", onBtn5Click);
										}
										container.addChild(button_8, {
											"colIndex": 1,
											"rowIndex": 0
										});
									})(group_19);
									container.addChild(group_19, {
										"colIndex": 0,
										"rowIndex": 0,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_17);
								container.addChild(group_17, {
									"top": "0px",
									"right": "0px",
									"bottom": "0px",
									"left": "0px"
								});
							})(group_16);
							tabItem_2.content = group_16;
							return tabItem_2;
						})(tabFolder_1);
						tabFolder_1.addTabItem(tabItem_2);
						
						var tabItem_3 = (function(tabFolder){
							var tabItem_3 = new cpr.controls.TabItem();
							tabItem_3.text = "폼 레이아웃";
							var group_20 = new cpr.controls.Container("grp12");
							var xYLayout_5 = new cpr.controls.layouts.XYLayout();
							group_20.setLayout(xYLayout_5);
							(function(container){
								var group_21 = new cpr.controls.Container("group9");
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.scrollable = false;
								formLayout_7.topMargin = "5px";
								formLayout_7.rightMargin = "5px";
								formLayout_7.bottomMargin = "5px";
								formLayout_7.leftMargin = "5px";
								formLayout_7.horizontalSeparatorWidth = 1;
								formLayout_7.verticalSeparatorWidth = 1;
								formLayout_7.setColumns(["1fr"]);
								formLayout_7.setRows(["40px", "1fr"]);
								group_21.setLayout(formLayout_7);
								(function(container){
									var group_22 = new cpr.controls.Container("grpForm");
									group_22.style.setClasses(["border", "bg-gray-dim", "layoutEx"]);
									var xYLayout_6 = new cpr.controls.layouts.XYLayout();
									group_22.setLayout(xYLayout_6);
									container.addChild(group_22, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_23 = new cpr.controls.Container("group10");
									var formLayout_8 = new cpr.controls.layouts.FormLayout();
									formLayout_8.scrollable = false;
									formLayout_8.topMargin = "5px";
									formLayout_8.rightMargin = "5px";
									formLayout_8.bottomMargin = "5px";
									formLayout_8.leftMargin = "5px";
									formLayout_8.horizontalSpacing = "5px";
									formLayout_8.setColumns(["1fr", "193px", "193px", "193px"]);
									formLayout_8.setColumnAutoSizing(1, true);
									formLayout_8.setColumnAutoSizing(2, true);
									formLayout_8.setColumnAutoSizing(3, true);
									formLayout_8.setRows(["30px"]);
									group_23.setLayout(formLayout_8);
									(function(container){
										var button_9 = new cpr.controls.Button("btn6");
										button_9.value = "동적 폼 레이아웃 생성";
										button_9.style.setClasses(["btn-light"]);
										if(typeof onBtn4Click == "function") {
											button_9.addEventListener("click", onBtn4Click);
										}
										container.addChild(button_9, {
											"colIndex": 1,
											"rowIndex": 0
										});
										var button_10 = new cpr.controls.Button("button1");
										button_10.value = "\"버튼2\" 컨트롤 위치 변경";
										button_10.style.setClasses(["btn-gray"]);
										button_10.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton1Click == "function") {
											button_10.addEventListener("click", onButton1Click);
										}
										container.addChild(button_10, {
											"colIndex": 2,
											"rowIndex": 0
										});
										var button_11 = new cpr.controls.Button("button7");
										button_11.value = "두번째 행 숨김";
										button_11.style.setClasses(["btn-dark"]);
										button_11.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton5Click == "function") {
											button_11.addEventListener("click", onButton5Click);
										}
										container.addChild(button_11, {
											"colIndex": 3,
											"rowIndex": 0
										});
									})(group_23);
									container.addChild(group_23, {
										"colIndex": 0,
										"rowIndex": 0,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_21);
								container.addChild(group_21, {
									"top": "0px",
									"right": "0px",
									"bottom": "0px",
									"left": "0px"
								});
							})(group_20);
							tabItem_3.content = group_20;
							return tabItem_3;
						})(tabFolder_1);
						tabFolder_1.addTabItem(tabItem_3);
						
						var tabItem_4 = (function(tabFolder){
							var tabItem_4 = new cpr.controls.TabItem();
							tabItem_4.text = "버티컬 레이아웃";
							var group_24 = new cpr.controls.Container("grp13");
							var xYLayout_7 = new cpr.controls.layouts.XYLayout();
							group_24.setLayout(xYLayout_7);
							(function(container){
								var group_25 = new cpr.controls.Container("group11");
								var formLayout_9 = new cpr.controls.layouts.FormLayout();
								formLayout_9.scrollable = false;
								formLayout_9.topMargin = "5px";
								formLayout_9.rightMargin = "5px";
								formLayout_9.bottomMargin = "5px";
								formLayout_9.leftMargin = "5px";
								formLayout_9.horizontalSeparatorWidth = 1;
								formLayout_9.verticalSeparatorWidth = 1;
								formLayout_9.setColumns(["1fr"]);
								formLayout_9.setRows(["40px", "1fr"]);
								group_25.setLayout(formLayout_9);
								(function(container){
									var group_26 = new cpr.controls.Container("grpVertical");
									group_26.style.setClasses(["border", "bg-gray-dim", "layoutEx"]);
									var xYLayout_8 = new cpr.controls.layouts.XYLayout();
									group_26.setLayout(xYLayout_8);
									container.addChild(group_26, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_27 = new cpr.controls.Container("group12");
									var formLayout_10 = new cpr.controls.layouts.FormLayout();
									formLayout_10.scrollable = false;
									formLayout_10.topMargin = "5px";
									formLayout_10.rightMargin = "5px";
									formLayout_10.bottomMargin = "5px";
									formLayout_10.leftMargin = "5px";
									formLayout_10.horizontalSpacing = "5px";
									formLayout_10.setColumns(["1fr", "193px", "193px", "193px", "193px"]);
									formLayout_10.setColumnAutoSizing(1, true);
									formLayout_10.setColumnAutoSizing(2, true);
									formLayout_10.setColumnAutoSizing(3, true);
									formLayout_10.setColumnAutoSizing(4, true);
									formLayout_10.setRows(["30px"]);
									group_27.setLayout(formLayout_10);
									(function(container){
										var button_12 = new cpr.controls.Button("btn7");
										button_12.value = "동적 버티컬 레이아웃 생성";
										button_12.style.setClasses(["btn-light"]);
										if(typeof onBtn7Click == "function") {
											button_12.addEventListener("click", onBtn7Click);
										}
										container.addChild(button_12, {
											"colIndex": 1,
											"rowIndex": 0
										});
										var button_13 = new cpr.controls.Button("button8");
										button_13.value = "그룹에 첫번째 자식으로 컨트롤 추가";
										button_13.style.setClasses(["btn-gray"]);
										button_13.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton8Click == "function") {
											button_13.addEventListener("click", onButton8Click);
										}
										container.addChild(button_13, {
											"colIndex": 2,
											"rowIndex": 0
										});
										var button_14 = new cpr.controls.Button("button9");
										button_14.value = "그룹에 마지막 자식으로 컨트롤 추가";
										button_14.style.setClasses(["btn-dark"]);
										button_14.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton9Click == "function") {
											button_14.addEventListener("click", onButton9Click);
										}
										container.addChild(button_14, {
											"colIndex": 3,
											"rowIndex": 0
										});
										var comboBox_1 = new cpr.controls.ComboBox("combobox1");
										comboBox_1.placeholder = "버티컬 레이아웃 distribution 지정";
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("fill(default)", "fill"));
											comboBox_1.addItem(new cpr.controls.Item("leading", "leading"));
											comboBox_1.addItem(new cpr.controls.Item("trailing", "trailing"));
											comboBox_1.addItem(new cpr.controls.Item("center", "center"));
										})(comboBox_1);
										if(typeof onCombobox1SelectionChange == "function") {
											comboBox_1.addEventListener("selection-change", onCombobox1SelectionChange);
										}
										container.addChild(comboBox_1, {
											"colIndex": 4,
											"rowIndex": 0
										});
									})(group_27);
									container.addChild(group_27, {
										"colIndex": 0,
										"rowIndex": 0,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_25);
								container.addChild(group_25, {
									"top": "0px",
									"right": "0px",
									"bottom": "0px",
									"left": "0px"
								});
							})(group_24);
							tabItem_4.content = group_24;
							return tabItem_4;
						})(tabFolder_1);
						tabFolder_1.addTabItem(tabItem_4);
						
						var tabItem_5 = (function(tabFolder){
							var tabItem_5 = new cpr.controls.TabItem();
							tabItem_5.text = "플로우 레이아웃";
							var group_28 = new cpr.controls.Container("grp14");
							var xYLayout_9 = new cpr.controls.layouts.XYLayout();
							group_28.setLayout(xYLayout_9);
							(function(container){
								var group_29 = new cpr.controls.Container("group13");
								var formLayout_11 = new cpr.controls.layouts.FormLayout();
								formLayout_11.scrollable = false;
								formLayout_11.topMargin = "5px";
								formLayout_11.rightMargin = "5px";
								formLayout_11.bottomMargin = "5px";
								formLayout_11.leftMargin = "5px";
								formLayout_11.horizontalSeparatorWidth = 1;
								formLayout_11.verticalSeparatorWidth = 1;
								formLayout_11.setColumns(["1fr"]);
								formLayout_11.setRows(["40px", "1fr"]);
								group_29.setLayout(formLayout_11);
								(function(container){
									var group_30 = new cpr.controls.Container("grpFlow");
									group_30.style.setClasses(["border", "bg-gray-dim", "layoutEx"]);
									var xYLayout_10 = new cpr.controls.layouts.XYLayout();
									group_30.setLayout(xYLayout_10);
									container.addChild(group_30, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var group_31 = new cpr.controls.Container("group14");
									var formLayout_12 = new cpr.controls.layouts.FormLayout();
									formLayout_12.scrollable = false;
									formLayout_12.topMargin = "5px";
									formLayout_12.rightMargin = "5px";
									formLayout_12.bottomMargin = "5px";
									formLayout_12.leftMargin = "5px";
									formLayout_12.horizontalSpacing = "5px";
									formLayout_12.setColumns(["1fr", "193px", "193px", "193px"]);
									formLayout_12.setColumnAutoSizing(1, true);
									formLayout_12.setColumnAutoSizing(2, true);
									formLayout_12.setColumnAutoSizing(3, true);
									formLayout_12.setRows(["30px"]);
									group_31.setLayout(formLayout_12);
									(function(container){
										var button_15 = new cpr.controls.Button("btn8");
										button_15.value = "동적 플로우 레이아웃 생성";
										button_15.style.setClasses(["btn-light"]);
										if(typeof onBtn8Click == "function") {
											button_15.addEventListener("click", onBtn8Click);
										}
										container.addChild(button_15, {
											"colIndex": 1,
											"rowIndex": 0
										});
										var button_16 = new cpr.controls.Button("button10");
										button_16.value = "그룹에 첫번째 자식으로 컨트롤 추가";
										button_16.style.setClasses(["btn-gray"]);
										button_16.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton10Click == "function") {
											button_16.addEventListener("click", onButton10Click);
										}
										container.addChild(button_16, {
											"colIndex": 2,
											"rowIndex": 0
										});
										var button_17 = new cpr.controls.Button("button11");
										button_17.value = "\"버튼5\" 컨트롤 줄 바꿈 허용안함";
										button_17.style.setClasses(["btn-dark"]);
										button_17.style.css({
											"padding-left" : "10px",
											"padding-right" : "10px"
										});
										if(typeof onButton11Click == "function") {
											button_17.addEventListener("click", onButton11Click);
										}
										container.addChild(button_17, {
											"colIndex": 3,
											"rowIndex": 0
										});
									})(group_31);
									container.addChild(group_31, {
										"colIndex": 0,
										"rowIndex": 0,
										"colSpan": 1,
										"rowSpan": 1
									});
								})(group_29);
								container.addChild(group_29, {
									"top": "0px",
									"right": "0px",
									"bottom": "0px",
									"left": "0px"
								});
							})(group_28);
							tabItem_5.content = group_28;
							return tabItem_5;
						})(tabFolder_1);
						tabFolder_1.addTabItem(tabItem_5);
						tabFolder_1.setSelectedTabItem(tabItem_1);
						container.addChild(tabFolder_1, {
							"autoSize": "none",
							"width": "1224px",
							"height": "410px"
						});
					})(group_11);
					container.addChild(group_11, {
						"autoSize": "height",
						"width": "400px",
						"height": "591px"
					});
				})(group_10);
				container.addChild(group_10, {
					"autoSize": "height",
					"width": "1240px",
					"height": "703px"
				});
				var hTMLSnippet_1 = new cpr.controls.HTMLSnippet();
				hTMLSnippet_1.value = "<style>\r\n.cl-container.content-box {\r\n\t\tbackground-color: #f5f8fa;\r\n\t\t\r\n\t\t.cl-output.content-tit {\r\n\t\t\tfont-size: 18px;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tcolor: #4d91ff;\r\n\t\t\t\r\n\t\t\t&.Notice{\r\n\t\t\t\tcolor : #EFA747;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t.cl-output.content-notice-title {\r\n\t\t   font-size: 18px;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tcolor: #7A001B;\r\n\t\t    \r\n\t\t   }\t\r\n\t\t.cl-container.box {\r\n\t\t\tbackground-color: #ffffff;\r\n\t\t\tborder: 1px solid #d6d6d6;\r\n\t\t\t\r\n\t\t\t.cl-output.box-tit {\r\n\t\t\t\tbackground-color: #e6edf9;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t.content-info{\r\n\t\t\tbackground-color : #FEFBDB;\r\n\t\t}\r\n\t\t.content-notice{\r\n\t\t\tbackground-color :  #FFCCD7;\r\n\t\t}\r\n\t}\r\n\t// 카드\r\n.cl-container.card {\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 1px solid #d6d6d6;\r\n\t\tborder-radius: 0px;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t.cl-output.opt-tmpl{\r\n\t\t\tline-height: 2.0;\r\n\t\t    color: #3B454F;\r\n\t\t    font-size : 16px;\r\n\t\t    -webkit-user-select: text;\r\n\t\t}\r\n\t\t\r\n\t}\r\n.cl-container.card {\r\n\tbackground-color: #ffffff;\r\n\tborder: 1px solid #d6d6d6;\r\n\tborder-radius: 4px;\r\n}\t\t\r\n\t<\/style>";
				container.addChild(hTMLSnippet_1, {
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1240px",
				"height": "3259px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "동적 스크립트";
	cpr.core.Platform.INSTANCE.register(app);
})();
