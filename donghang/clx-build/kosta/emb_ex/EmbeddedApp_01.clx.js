/*
 * App URI: kosta/emb_ex/EmbeddedApp_01
 * Source Location: kosta/emb_ex/EmbeddedApp_01.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/emb_ex/EmbeddedApp_01", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				// 임베디드 앱
				var host = app.getHost();
				var opt1 = app.lookup("opt1");
				var opt4 = app.lookup("opt4");
				
				if(host){
					/*임베디드 앱의 초기값을 가져옵니다.*/
					opt1.value = host.initValue.value;
					opt4.value = host.initValue.appId;
				}
				
				/*부모 앱 인스턴스에 접근합니다.*/
				var hostAppInstance = host.getAppInstance();

				app.lookup("button1").addEventListener("click", function(e){
					/*부모 앱 인스턴스에 'ace' UDC에 접근하여 값을 전달합니다.*/
					hostAppInstance.lookup("ace").value = onButton1Click;
				});
			}

			/**
			 * 알람메시지
			 * @param {String} message 메시지
			 */
			function alertMessage(message){
				app.lookup("opt3").value = message;
			}

			exports.alertMessage = alertMessage;


			/*
			 * "값 가져오기" 버튼(button1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButton1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button1 = e.control;
				
				// 임베디드 앱
				var host = app.getHost();
				
				/*부모 앱 인스턴스에 접근합니다.(app.getHostAppInstance() = app.getHost().getAppInstance())*/
				var hostAppInstance = host.getAppInstance();
				
				
				/*부모 앱 인스턴스의 앱 속성의 값을 가져옵니다.*/
				app.lookup("opt2").value = hostAppInstance.getAppProperty("mainApp");
			};
			// End - User Script
			
			// Header
			app.declareAppProperty("appId", "임베디드앱01");
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"border-bottom-width" : "1px",
				"border-right-style" : "solid",
				"border-top-color" : "red",
				"top" : "0px",
				"border-top-style" : "solid",
				"left" : "0px",
				"border-bottom-color" : "red",
				"border-left-width" : "1px",
				"border-left-style" : "solid",
				"border-left-color" : "red",
				"border-bottom-style" : "solid",
				"border-right-color" : "red",
				"width" : "100%",
				"height" : "100%",
				"border-top-width" : "1px",
				"border-right-width" : "1px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "첫번째 페이지";
			output_1.style.setClasses(["h3"]);
			output_1.style.css({
				"font-size" : "2rem"
			});
			container.addChild(output_1, {
				"top": "10px",
				"right": "20px",
				"left": "20px",
				"height": "42px"
			});
			
			var group_1 = new cpr.controls.Container("group1");
			group_1.style.setClasses(["content-form-box"]);
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["200px", "100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["30px", "30px", "30px", "30px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_2 = new cpr.controls.Output();
				output_2.value = "initValue";
				output_2.style.setClasses(["card-title"]);
				output_2.style.css({
					"text-align" : "center"
				});
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output("output1");
				output_3.value = "부모 앱의 앱 속성";
				output_3.style.setClasses(["card-title"]);
				output_3.style.css({
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "앱 속성";
				output_4.style.setClasses(["card-title"]);
				output_4.style.css({
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("inputbox1");
				inputBox_1.placeholder = "앱 속성 값을 입력하세요.";
				inputBox_1.style.css({
					"color" : "#1676fb",
					"font-size" : "18px"
				});
				inputBox_1.bind("value").toAppProperty("appId");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var output_5 = new cpr.controls.Output("opt2");
				output_5.value = "";
				output_5.style.setClasses(["text-left"]);
				output_5.style.css({
					"color" : "#ff63a5",
					"padding-left" : "10px",
					"font-size" : "18px"
				});
				container.addChild(output_5, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "앱 함수";
				output_6.style.setClasses(["card-title"]);
				output_6.style.css({
					"text-align" : "center"
				});
				container.addChild(output_6, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_7 = new cpr.controls.Output("opt3");
				output_7.value = "";
				output_7.style.setClasses(["text-left"]);
				output_7.style.css({
					"color" : "#816bff",
					"padding-left" : "10px",
					"font-size" : "18px"
				});
				container.addChild(output_7, {
					"colIndex": 1,
					"rowIndex": 3,
					"colSpan": 2,
					"rowSpan": 1
				});
				var button_1 = new cpr.controls.Button("button1");
				button_1.value = "값 가져오기";
				if(typeof onButton1Click == "function") {
					button_1.addEventListener("click", onButton1Click);
				}
				container.addChild(button_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var group_2 = new cpr.controls.Container("group2");
				group_2.style.setClasses(["content-form-box"]);
				group_2.style.css({
					"border-radius" : "0px"
				});
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.scrollable = false;
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["100px", "1fr", "100px", "1fr"]);
				formLayout_2.setCustomColumnShade(0, "#e7f0fa");
				formLayout_2.setCustomColumnShade(2, "#e7f0fa");
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_8 = new cpr.controls.Output();
					output_8.value = "value";
					output_8.style.setClasses(["card-title"]);
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_9 = new cpr.controls.Output();
					output_9.value = "appId";
					output_9.style.setClasses(["card-title"]);
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_10 = new cpr.controls.Output("opt4");
					output_10.value = "";
					output_10.style.setClasses(["text-left"]);
					output_10.style.css({
						"padding-left" : "10px",
						"font-size" : "18px"
					});
					container.addChild(output_10, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_11 = new cpr.controls.Output("opt1");
					output_11.value = "";
					output_11.style.setClasses(["text-left"]);
					output_11.style.css({
						"padding-left" : "10px",
						"font-size" : "18px"
					});
					container.addChild(output_11, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 0,
					"colSpan": 2,
					"rowSpan": 1,
					"ignoreLayoutSpacing": false
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "66px",
				"right": "20px",
				"left": "20px",
				"height": "161px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "EmbeddedApp_01";
	cpr.core.Platform.INSTANCE.register(app);
})();
