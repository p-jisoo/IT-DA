/*
 * App URI: kosta/Main_ex/Main
 * Source Location: kosta/Main_ex/Main.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/Main_ex/Main", { 
		onPrepare: function(loader) {
			loader.addCSS("kosta/Main_ex/main.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * Main.js
			 * Created at 2022. 11. 22. 오후 4:38:47.
			 *
			 * @author HANS
			 ************************************************/

			var initValue;
			/*
			 * 사이드 내비게이션에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onSideNav1ItemClick2(e){
				var sideNav1 = e.control;
				
				// mdi 컨트롤 
				var vcMdi = app.lookup("mdiCn");
				
				// 선택한 아이템에 대한 값 
				var vsAppId = e.item.value;
				
				// 초기값
				initValue = e.item.label;
				
				// 입력값에 선택된 앱이 존재하지 않는 경우
				if(vsAppId == null) {
					return alert("추가될 App이 존재하지 않습니다.");
				}
				
				var vcTabItem = vcMdi.findItemWithAppID(vsAppId);
				if (vcTabItem != null) {
					alert("추가되어있는 App 입니다.");
					return;
				}
				
				// addItemWithApp을 통해 앱을 추가
				var tabItem = vcMdi.addItemWithApp(vsAppId);
			}

			/*
			 * MDI 폴더에서 content-load 이벤트 발생 시 호출.
			 * TabItem의 Content가 그려지고 브라우저에 표현되기 직전에 호출됨.
			 */
			function onMdiCnContentLoad(e){
				var mdiCn = e.control;
				
				// mdi 컨트롤 
				var vcMdi = app.lookup("mdiCn");
				
				//선택한 탭아이템
				var tabItem = vcMdi.getSelectedTabItem();

			     /** @type cpr.controls.EmbeddedApp */

			    var embApp = tabItem.content;    // 선택한 탭 아이템의 컨텐츠 영역(임베디드앱)
			    
			    //임베디드 앱의 앱인스턴스
			    var voAppIns = embApp.getEmbeddedAppInstance();

			    //임베디드한 화면안에 존재하는 컨트롤의 값 변경
			    voAppIns.lookup("opt").value = initValue;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAllMenu");
			dataSet_1.parseData({
				"columns" : [
					{"name": "MENU_NM"},
					{"name": "MENU_ID"},
					{"name": "UP_MENU_ID"},
					{"name": "TOP_MENU_ID"},
					{"name": "CALL_PAGE"},
					{"name": "PGM_ID"},
					{"name": "ICON"},
					{"name": "MENU_KEY"},
					{"name": "MOBILE_YN"},
					{"name": "DESC"},
					{"name": "CLASS"},
					{
						"name": "MENU_DESC",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "\"[\" + MENU_NM + \"] \" + DESC\r\n"
					},
					{
						"name": "MENU_LOWERCASE",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "doLowerCase(MENU_NM)"
					},
					{
						"name": "DESC_LOWERCASE",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "doLowerCase(DESC)"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds1");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "첫번째", "value": "kosta/emb/Ex_Emb/emb_1"},
					{"label": "두번째", "value": "kosta/emb/Ex_Emb/emb_2"},
					{"label": "세번째", "value": "kosta/emb/Ex_Emb/emb_3"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmGlobalConfig");
			dataMap_1.parseData({
				"columns" : [
					{"name": "mdiWindowMaxCount"},
					{"name": "defaultLocale"},
					{"name": "divideMdiUseYn"},
					{
						"name": "useLayerdPop",
						"defaultValue": "N"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "data/main.json";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1280px)", "default");
			app.supportMedia("all and (min-width: 860px) and (max-width: 1279px)", "tablet");
			app.supportMedia("all and (max-width: 859px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			xYLayout_1.animationDuration = 0.35;
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var notifier_1 = new cpr.controls.Notifier("notiToastr");
			notifier_1.maxNotifyCount = 1;
			notifier_1.delay = 2000;
			notifier_1.animation = "fadein";
			notifier_1.close = true;
			notifier_1.successDelay = 2000;
			notifier_1.successClose = true;
			notifier_1.infoDelay = 2000;
			notifier_1.infoClose = true;
			notifier_1.warningDelay = 2000;
			notifier_1.warningClose = true;
			notifier_1.dangerDelay = 4000;
			notifier_1.dangerClose = true;
			notifier_1.style.item.setClasses(["notiToastr"]);
			container.addChild(notifier_1, {
				"right": "20px",
				"bottom": "20px",
				"width": "350px",
				"height": "50px"
			});
			
			var group_1 = new cpr.controls.Container("grpLNB");
			group_1.style.setClasses(["aside"]);
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			xYLayout_2.scrollable = false;
			group_1.setLayout(xYLayout_2);
			(function(container){
				var image_1 = new cpr.controls.Image("imgLogo");
				image_1.fieldLabel = "eXCFrame 로고";
				image_1.tabIndex = 0;
				image_1.src = "kosta/Main_ex/logo.png";
				image_1.alt = "eXCFrame 로고";
				image_1.style.setClasses(["cursor-pointer"]);
				if(typeof onImageLogoClick == "function") {
					image_1.addEventListener("click", onImageLogoClick);
				}
				if(typeof onImgLogoKeydown == "function") {
					image_1.addEventListener("keydown", onImgLogoKeydown);
				}
				container.addChild(image_1, {
					"top": "28px",
					"left": "30px",
					"width": "177px",
					"height": "39px"
				});
				var searchInput_1 = new cpr.controls.SearchInput("srch1");
				searchInput_1.hideClearButton = true;
				searchInput_1.style.setClasses(["global-search"]);
				if(typeof onSearchInputSearch == "function") {
					searchInput_1.addEventListener("search", onSearchInputSearch);
				}
				container.addChild(searchInput_1, {
					"top": "121px",
					"right": "30px",
					"left": "30px",
					"height": "40px"
				});
				var sideNavigation_1 = new cpr.controls.SideNavigation("sideNav1");
				sideNavigation_1.indent = 0;
				sideNavigation_1.style.setClasses(["sidemenu"]);
				sideNavigation_1.style.item.bindClass().toExpression("CLASS");
				(function(sideNavigation_1){
					sideNavigation_1.setItemSet(app.lookup("ds1"), {
						"label": "label",
						"value": "value"
					});
				})(sideNavigation_1);
				if(typeof onSideNav1ItemClick2 == "function") {
					sideNavigation_1.addEventListener("item-click", onSideNav1ItemClick2);
				}
				container.addChild(sideNavigation_1, {
					"top": "200px",
					"right": "0px",
					"bottom": "108px",
					"left": "0px"
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "copyright(c) 2022 \r\nTomatosystem All reserved.";
				output_1.style.setClasses(["caption", "fs-sm"]);
				container.addChild(output_1, {
					"bottom": "36px",
					"left": "34px",
					"width": "156px",
					"height": "32px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"bottom": "0px",
				"left": "0px",
				"width": "280px"
			});
			
			var group_2 = new cpr.controls.Container("grpHeader");
			group_2.style.setClasses(["header"]);
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			xYLayout_3.scrollable = false;
			group_2.setLayout(xYLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("grpMnu");
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.horizontalSpacing = 0;
				flowLayout_1.verticalSpacing = 0;
				flowLayout_1.lineWrap = false;
				group_3.setLayout(flowLayout_1);
				(function(container){
					var button_1 = new cpr.controls.Button("btnMnuToggle");
					button_1.value = "";
					button_1.style.setClasses(["btn-nav-menu"]);
					if(typeof onBtnMnuToggleClick == "function") {
						button_1.addEventListener("click", onBtnMnuToggleClick);
					}
					container.addChild(button_1, {
						"width": "24px",
						"height": "24px"
					});
					var button_2 = new cpr.controls.Button("btnMnuOpen");
					button_2.visible = false;
					button_2.value = "";
					button_2.style.setClasses(["btn-nav-menu"]);
					if(typeof onBtnMnuOpenClick == "function") {
						button_2.addEventListener("click", onBtnMnuOpenClick);
					}
					container.addChild(button_2, {
						"width": "24px",
						"height": "24px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "18px",
					"left": "0px",
					"width": "48px",
					"height": "24px"
				});
				var group_4 = new cpr.controls.Container();
				var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
				flowLayout_2.scrollable = false;
				flowLayout_2.horizontalSpacing = 26;
				flowLayout_2.verticalSpacing = 0;
				flowLayout_2.horizontalAlign = "right";
				group_4.setLayout(flowLayout_2);
				(function(container){
					var button_3 = new cpr.controls.Button("btnDownload");
					button_3.fieldLabel = "프로젝트 다운로드 가이드";
					button_3.tooltip = "프로젝트 다운로드 가이드";
					button_3.value = "";
					button_3.style.setClasses(["btn-nav-download"]);
					if(typeof onBtnDownloadClick == "function") {
						button_3.addEventListener("click", onBtnDownloadClick);
					}
					container.addChild(button_3, {
						"width": "24px",
						"height": "24px"
					});
					var button_4 = new cpr.controls.Button("btnDarkMode");
					button_4.fieldLabel = "테마 변경하기";
					button_4.tooltip = "테마 변경하기";
					button_4.value = "";
					button_4.style.setClasses(["btn-nav-dark"]);
					if(typeof onBtnDarkModeClick == "function") {
						button_4.addEventListener("click", onBtnDarkModeClick);
					}
					container.addChild(button_4, {
						"width": "24px",
						"height": "24px"
					});
				})(group_4);
				container.addChild(group_4, {
					"right": "40px",
					"width": "124px",
					"height": "24px",
					"top": "calc(50% - 12px)"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "0px",
				"right": "0px",
				"left": "280px",
				"height": "60px"
			});
			
			var group_5 = new cpr.controls.Container("grpMdiWrapper");
			group_5.style.setClasses(["body"]);
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			xYLayout_4.scrollable = false;
			xYLayout_4.animationDuration = 0.35;
			group_5.setLayout(xYLayout_4);
			(function(container){
				var mDIFolder_1 = new cpr.controls.MDIFolder("mdiCn");
				mDIFolder_1.childCombinatorClass = "content";
				mDIFolder_1.headerCheckable = true;
				mDIFolder_1.style.setClasses(["tab-content"]);
				var group_6 = new cpr.controls.Container();
				group_6.clipContent = false;
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				xYLayout_5.scrollable = false;
				group_6.setLayout(xYLayout_5);
				(function(container){
					var button_5 = new cpr.controls.Button("btnTabHome");
					button_5.value = "";
					button_5.icon = "kosta/Main_ex/com/ic_home.png";
					button_5.style.setClasses(["cl-tabfolder-item"]);
					if(typeof onBtnTabHomeClick == "function") {
						button_5.addEventListener("click", onBtnTabHomeClick);
					}
					container.addChild(button_5, {
						"top": "0px",
						"right": "-1px",
						"bottom": "0px",
						"left": "0px"
					});
				})(group_6);
				mDIFolder_1.addHeaderControl(group_6, {"position": "heading", "width": 35});
				var group_7 = new cpr.controls.Container();
				group_7.clipContent = false;
				group_7.style.setClasses(["tab-utils"]);
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				xYLayout_6.scrollable = false;
				group_7.setLayout(xYLayout_6);
				(function(container){
					var button_6 = new cpr.controls.Button("btnZoom");
					button_6.value = "";
					button_6.icon = "kosta/Main_ex/com/ic_btn_zoom.png";
					button_6.style.setClasses(["btn-zoom"]);
					if(typeof onBtnZoomClick == "function") {
						button_6.addEventListener("click", onBtnZoomClick);
					}
					container.addChild(button_6, {
						"top": "0px",
						"right": "70px",
						"bottom": "0px",
						"width": "36px"
					});
					var button_7 = new cpr.controls.Button("btnRefresh");
					button_7.value = "";
					button_7.icon = "kosta/Main_ex/com/ic_btn_refresh.png";
					button_7.style.setClasses(["btn-refresh"]);
					if(typeof onBtnRefreshClick == "function") {
						button_7.addEventListener("click", onBtnRefreshClick);
					}
					container.addChild(button_7, {
						"top": "0px",
						"right": "35px",
						"bottom": "0px",
						"width": "36px"
					});
					var button_8 = new cpr.controls.Button("btnClose");
					button_8.value = "";
					button_8.icon = "kosta/Main_ex/com/ic_btn_close.png";
					button_8.style.setClasses(["btn-close"]);
					if(typeof onBtnCloseClick == "function") {
						button_8.addEventListener("click", onBtnCloseClick);
					}
					container.addChild(button_8, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"width": "36px"
					});
				})(group_7);
				mDIFolder_1.addHeaderControl(group_7, {"position": "right", "width": 105});
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "대시보드";
					tabItem_1.name = "default";
					tabItem_1.visible = false;
					var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
					tabItem_1.content = embeddedApp_1;
					return tabItem_1;
				})(mDIFolder_1);
				mDIFolder_1.addTabItem(tabItem_1);
				mDIFolder_1.setSelectedTabItem(tabItem_1);
				if(typeof onMdiCnClose == "function") {
					mDIFolder_1.addEventListener("close", onMdiCnClose);
				}
				if(typeof onMdiCnContentLoad == "function") {
					mDIFolder_1.addEventListener("content-load", onMdiCnContentLoad);
				}
				container.addChild(mDIFolder_1, {
					"top": "20px",
					"right": "20px",
					"bottom": "20px",
					"left": "20px"
				});
				var group_8 = new cpr.controls.Container("grpZoom");
				group_8.visible = false;
				group_8.style.setClasses(["floating-box"]);
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.scrollable = false;
				formLayout_1.topMargin = "1fr";
				formLayout_1.rightMargin = "10px";
				formLayout_1.bottomMargin = "1fr";
				formLayout_1.leftMargin = "10px";
				formLayout_1.horizontalSpacing = "6px";
				formLayout_1.verticalSpacing = "6px";
				formLayout_1.setColumns(["24px", "1fr", "24px"]);
				formLayout_1.setRows(["24px"]);
				group_8.setLayout(formLayout_1);
				(function(container){
					var button_9 = new cpr.controls.Button("btnZoomMinus");
					button_9.value = "-";
					button_9.style.setClasses(["btn-p-0"]);
					if(typeof onBtnZoomPlusMinusClick == "function") {
						button_9.addEventListener("click", onBtnZoomPlusMinusClick);
					}
					container.addChild(button_9, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_10 = new cpr.controls.Button("btnZoomPlus");
					button_10.value = "+";
					button_10.style.setClasses(["btn-p-0"]);
					if(typeof onBtnZoomPlusMinusClick == "function") {
						button_10.addEventListener("click", onBtnZoomPlusMinusClick);
					}
					container.addChild(button_10, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("nbePercent");
					numberEditor_1.enabled = false;
					numberEditor_1.value = "100";
					numberEditor_1.style.setClasses(["no-status"]);
					container.addChild(numberEditor_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_8);
				container.addChild(group_8, {
					"top": "60px",
					"right": "90px",
					"width": "140px",
					"height": "36px"
				});
			})(group_5);
			container.addChild(group_5, {
				"top": "60px",
				"right": "0px",
				"bottom": "0px",
				"left": "280px"
			});
			
			var listBox_1 = new cpr.controls.ListBox("lbxStyle");
			listBox_1.visible = false;
			(function(listBox_1){
				listBox_1.addItem(new cpr.controls.Item("다크테마", "theme"));
				listBox_1.addItem(new cpr.controls.Item("색상반전", "invert"));
			})(listBox_1);
			if(typeof onLbxStyleItemClick == "function") {
				listBox_1.addEventListener("item-click", onLbxStyleItemClick);
			}
			container.addChild(listBox_1, {
				"top": "50px",
				"left": "1165px",
				"width": "100px",
				"height": "66px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyScreenChange == "function"){
				app.addEventListener("screen-change", onBodyScreenChange);
			}
		}
	});
	app.title = "eXBuilder6 샘플 가이드";
	cpr.core.Platform.INSTANCE.register(app);
})();
