/*
 * App URI: kosta/Filter/02-Filter
 * Source Location: kosta/Filter/02-Filter.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/Filter/02-Filter", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				
				cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function(){
					
				});
			}




			/*
			 * "실행" 버튼(btnSetFilter)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilterClick(e){
				var btnSetFilter = e.control;
				
				comboBoxFilterExp();
				
				
			}

			function comboBoxFilterExp(){
				var vcCombox = app.lookup("cmb3");
				vcCombox.filterExp = "parent == '30'";
				vcCombox.selectItem(0);
			}

			/*
			 * "실행" 버튼(btnSetFilter2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilter2Click(e){
				var btnSetFilter2 = e.control;
				comboBoxRemoveFilterExp();

			}

			function comboBoxRemoveFilterExp(){
				var vcCombox = app.lookup("cmb3");
				vcCombox.clearFilter();
				vcCombox.selectItem(0);
			}

			/*
			 * "실행" 버튼(btnHasAncestor4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnHasAncestor4Click(e){
				var btnHasAncestor4 = e.control;
				
				var vcTree = app.lookup("sampleTre");
				
				vcTree.setFilter("parent == '0'");
				
				
			}

			/*
			 * "실행" 버튼(btnHasAncestor)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnHasAncestorClick(e){
				var btnHasAncestor = e.control;
				
				setAncestor();
				
			}

			//function setDepth() {
			//	var vcTreMn = app.lookup("sampleTre");
			//	var vnDepth = app.lookup("cmbSetFilter").value;
			//	var voItem = vcTreMn.getSelection()[0];
			//	
			//	//선택한 아이템의 깊이로 필터	
			//	vcTreMn.setFilter("depth == '" + vnDepth + "'");
			//}

			function setAncestor() {
				var vcTreMn = app.lookup("sampleTre");
				var voItem = vcTreMn.getSelection()[0];
				if (voItem) {
					//filterExp , setFilter 동일하게 작동합니다.
					//vcTreMn.filterExp = "hasAncestor('" + voItem.value + "') || value == '"  + voItem.value + "'" ;   
					vcTreMn.setFilter("hasAncestor('" + voItem.value + "') || value == '" + voItem.value + "'");
				}
			}

			/*
			 * "실행" 버튼(btnHasAncestor3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnHasAncestor3Click(e){
				var btnHasAncestor3 = e.control;
				clearFilter();

			}

			function clearFilter(){
				var vcTreMn = app.lookup("sampleTre");
				
				vcTreMn.clearFilter();
			}

			/*
			 * "실행" 버튼(btnSetFilter3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilter3Click(e){
				var btnSetFilter3 = e.control;
				filetExp2();

				
			}

			function filetExp2(){
				var cmb2 = app.lookup("cmb2");
				cmb2.filterExp = "label *= \"서울시\"";
			}

			/*
			 * "실행" 버튼(btnSetFilter4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilter4Click(e){
				var btnSetFilter4 = e.control;
				clearFilter2();

			}

			function clearFilter2(){
				var cmb2 = app.lookup("cmb2");
				cmb2.clearFilter();;
			}

			/*
			 * "실행" 버튼(btnHasAncestor2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnHasAncestor2Click(e){
				var btnHasAncestor2 = e.control;
				setTreeFilter();

			}

			function setTreeFilter(){
				var vcTreMn = app.lookup("sampleTre");
				
				vcTreMn.setTreeFilter("value == '1-1-1'");
			}

			/*
			 * "filterExp 실행" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(e){
				var btn1 = e.control;
				comboBoxFilter();

			}

			function comboBoxFilter(){
				//해당 조건식으로 콤보박스 필터 적용
				var vcCmb = app.lookup("cmbOnesDigit");
				vcCmb.filterExp = "parent == tensDigit";
				vcCmb.selectItem(0);
			}

			/*
			 * "실행" 버튼(btnSetFilter5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilter5Click(e){
				var btnSetFilter5 = e.control;
				
				comboBoxFilter1();

			}

			/*
			 * "실행" 버튼(btnSetFilter6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetFilter6Click(e){
				var btnSetFilter6 = e.control;
				comboBoxRemoveFilter1();

			}

			function comboBoxFilter1(){
				var vcCombox = app.lookup("cmb4");
				vcCombox.setFilter("value > 5 && value < 25");
				vcCombox.selectItem(0);
			}

			function comboBoxRemoveFilter1(){
				var vcCombox = app.lookup("cmb4");
				vcCombox.clearFilter();
				vcCombox.selectItem(0);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns": [
					{"name": "tensDigit"},
					{"name": "onesDigit"}
				],
				"rows": [
					{"tensDigit": "10", "onesDigit": "11"},
					{"tensDigit": "20", "onesDigit": "21"},
					{"tensDigit": "30", "onesDigit": "31"},
					{"tensDigit": "10", "onesDigit": "12"},
					{"tensDigit": "20", "onesDigit": "22"},
					{"tensDigit": "30", "onesDigit": "32"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dvList", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmb1");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "10", "value": "10"},
					{"label": "20", "value": "20"},
					{"label": "30", "value": "30"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmb2");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "11", "value": "11", "parent": "10"},
					{"label": "12", "value": "12", "parent": "10"},
					{"label": "13", "value": "13", "parent": "10"},
					{"label": "14", "value": "14", "parent": "10"},
					{"label": "15", "value": "15", "parent": "10"},
					{"label": "16", "value": "16", "parent": "10"},
					{"label": "17", "value": "17", "parent": "10"},
					{"label": "18", "value": "18", "parent": "10"},
					{"label": "19", "value": "19", "parent": "10"},
					{"label": "21", "value": "21", "parent": "20"},
					{"label": "22", "value": "22", "parent": "20"},
					{"label": "23", "value": "23", "parent": "20"},
					{"label": "24", "value": "24", "parent": "20"},
					{"label": "25", "value": "25", "parent": "20"},
					{"label": "26", "value": "26", "parent": "20"},
					{"label": "27", "value": "27", "parent": "20"},
					{"label": "28", "value": "28", "parent": "20"},
					{"label": "29", "value": "29", "parent": "20"},
					{"label": "31", "value": "31", "parent": "30"},
					{"label": "32", "value": "32", "parent": "30"},
					{"label": "33", "value": "33", "parent": "30"},
					{"label": "34", "value": "34", "parent": "30"},
					{"label": "35", "value": "35", "parent": "30"},
					{"label": "36", "value": "36", "parent": "30"},
					{"label": "37", "value": "37", "parent": "30"},
					{"label": "38", "value": "38", "parent": "30"},
					{"label": "39", "value": "39", "parent": "30"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmb3");
			dataSet_4.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "11", "value": "11", "parent": "10"},
					{"label": "12", "value": "12", "parent": "10"},
					{"label": "13", "value": "13", "parent": "10"},
					{"label": "14", "value": "14", "parent": "10"},
					{"label": "15", "value": "15", "parent": "10"},
					{"label": "16", "value": "16", "parent": "10"},
					{"label": "17", "value": "17", "parent": "10"},
					{"label": "18", "value": "18", "parent": "10"},
					{"label": "19", "value": "19", "parent": "10"},
					{"label": "21", "value": "21", "parent": "20"},
					{"label": "22", "value": "22", "parent": "20"},
					{"label": "23", "value": "23", "parent": "20"},
					{"label": "24", "value": "24", "parent": "20"},
					{"label": "25", "value": "25", "parent": "20"},
					{"label": "26", "value": "26", "parent": "20"},
					{"label": "27", "value": "27", "parent": "20"},
					{"label": "28", "value": "28", "parent": "20"},
					{"label": "29", "value": "29", "parent": "20"},
					{"label": "31", "value": "31", "parent": "30"},
					{"label": "32", "value": "32", "parent": "30"},
					{"label": "33", "value": "33", "parent": "30"},
					{"label": "34", "value": "34", "parent": "30"},
					{"label": "35", "value": "35", "parent": "30"},
					{"label": "36", "value": "36", "parent": "30"},
					{"label": "37", "value": "37", "parent": "30"},
					{"label": "38", "value": "38", "parent": "30"},
					{"label": "39", "value": "39", "parent": "30"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsList2");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "카테고리0", "value": "0", "parent": "-1"},
					{"label": "카테고리1", "value": "1", "parent": "0"},
					{"label": "카테고리1-1", "value": "1-1", "parent": "1"},
					{"label": "카테고리1-1-1", "value": "1-1-1", "parent": "1-1"},
					{"label": "카테고리1-1-2", "value": "1-1-2", "parent": "1-1"},
					{"label": "카테고리1-2", "value": "1-2", "parent": "1"},
					{"label": "카테고리2", "value": "2", "parent": "0"},
					{"label": "카테고리2-1", "value": "2-1", "parent": "2"},
					{"label": "카테고리2-2", "value": "2-2", "parent": "2"},
					{"label": "카테고리3", "value": "3", "parent": "0"},
					{"label": "카테고리4", "value": "4", "parent": "0"},
					{"label": "카테고리4-1", "value": "4-1", "parent": "4"},
					{"label": "카테고리4-2", "value": "4-2", "parent": "4"},
					{"label": "카테고리4-2-1", "value": "4-2-1", "parent": "4-2"},
					{"label": "카테고리4-3", "value": "4-3", "parent": "4"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmb4");
			dataSet_6.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "서울시 서초구", "value": "11", "parent": "10"},
					{"label": "서울시 강남구", "value": "12", "parent": "10"},
					{"label": "서울시 송파구", "value": "13", "parent": "10"},
					{"label": "서울시 용산구", "value": "14", "parent": "10"},
					{"label": "서울시 성복구", "value": "15", "parent": "10"},
					{"label": "서울시 노원구", "value": "16", "parent": "10"},
					{"label": "부산시 중구", "value": "17", "parent": "10"},
					{"label": "부산시 서구", "value": "18", "parent": "10"},
					{"label": "부산시 동래구", "value": "19", "parent": "10"},
					{"label": "부산시 해운대구", "value": "21", "parent": "20"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmb5");
			dataSet_7.parseData({
				"columns": [
					{
						"name": "label",
						"dataType": "string"
					},
					{
						"name": "value",
						"dataType": "number"
					}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"},
					{"label": "7", "value": "7"},
					{"label": "8", "value": "8"},
					{"label": "9", "value": "9"},
					{"label": "10", "value": "10"},
					{"label": "11", "value": "11"},
					{"label": "12", "value": "12"},
					{"label": "13", "value": "13"},
					{"label": "14", "value": "14"},
					{"label": "15", "value": "15"},
					{"label": "16", "value": "16"},
					{"label": "17", "value": "17"},
					{"label": "18", "value": "18"},
					{"label": "19", "value": "19"},
					{"label": "20", "value": "20"},
					{"label": "21", "value": "21"},
					{"label": "22", "value": "22"},
					{"label": "23", "value": "23"},
					{"label": "24", "value": "24"},
					{"label": "25", "value": "25"},
					{"label": "26", "value": "26"},
					{"label": "27", "value": "27"},
					{"label": "28", "value": "28"},
					{"label": "29", "value": "29"},
					{"label": "30", "value": "30"}
				]
			});
			app.register(dataSet_7);
			app.supportMedia("all and (min-width: 1280px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1279px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["subpage"]);
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			var dataRowContext_1 = new cpr.bind.DataRowContext(app.lookup("dsCmb3"), 0);
			container.setBindContext(dataRowContext_1);
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 25;
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "아이템을 가지는 컨트롤에서는 filter API & filterExp 속성을 사용할 수 있습니다.";
			container.addChild(output_1, {
				"autoSize": "height",
				"width": "1240px",
				"height": "48px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 10;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grp2");
				group_2.style.setClasses(["content-box"]);
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 10;
				verticalLayout_3.leftMargin = 20;
				verticalLayout_3.rightMargin = 20;
				verticalLayout_3.topMargin = 20;
				verticalLayout_3.bottomMargin = 20;
				group_2.setLayout(verticalLayout_3);
				(function(container){
					var output_2 = new cpr.controls.Output("opt4");
					output_2.value = "콤보박스 filter&filterExp";
					output_2.style.setClasses(["content-tit"]);
					container.addChild(output_2, {
						"autoSize": "height",
						"width": "100px",
						"height": "26px"
					});
					var group_3 = new cpr.controls.Container("grp3");
					group_3.style.setClasses(["card"]);
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_4.spacing = 10;
					verticalLayout_4.leftMargin = 20;
					verticalLayout_4.rightMargin = 20;
					verticalLayout_4.topMargin = 20;
					verticalLayout_4.bottomMargin = 20;
					group_3.setLayout(verticalLayout_4);
					(function(container){
						var output_3 = new cpr.controls.Output("opt5");
						output_3.value = "그리드내부에 있는 콤보박스에서 제공하는 setFilter API, filterExp 속성을 통해 아이템을 필터할 수 있습니다.";
						output_3.style.setClasses(["opt-tmpl"]);
						container.addChild(output_3, {
							"autoSize": "height",
							"width": "1158px",
							"height": "44px"
						});
						var group_4 = new cpr.controls.Container("grp8");
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.scrollable = true;
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.verticalSpacing = "5px";
						formLayout_1.setColumns(["1fr"]);
						formLayout_1.setRows(["30px", "1fr"]);
						group_4.setLayout(formLayout_1);
						(function(container){
							var grid_1 = new cpr.controls.Grid("sampleGrd");
							grid_1.init({
								"dataSet": app.lookup("dsList"),
								"columns": [
									{"width": "25px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "35px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "No";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.targetColumnName = "tensDigit";
												cell.text = "십의 자리수";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.filterable = false;
												cell.sortable = false;
												cell.targetColumnName = "onesDigit";
												cell.text = "일의 자리수";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "30px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnType = "rowindex";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "tensDigit";
												cell.control = (function(){
													var comboBox_1 = new cpr.controls.ComboBox("cmbTensDigit");
													comboBox_1.placeholder = "십의 자리수 선택";
													comboBox_1.style.setClasses(["text-center"]);
													(function(comboBox_1){
														comboBox_1.setItemSet(app.lookup("dsCmb1"), {
															"label": "label",
															"value": "value"
														});
													})(comboBox_1);
													comboBox_1.bind("value").toDataColumn("tensDigit");
													return comboBox_1;
												})();
												cell.controlConstraint = {};
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "onesDigit";
												cell.control = (function(){
													var comboBox_2 = new cpr.controls.ComboBox("cmbOnesDigit");
													comboBox_2.placeholder = "일의 자리수 선택";
													comboBox_2.style.setClasses(["text-center"]);
													(function(comboBox_2){
														comboBox_2.setItemSet(app.lookup("dsCmb2"), {
															"label": "label",
															"value": "value"
														});
													})(comboBox_2);
													comboBox_2.bind("value").toDataColumn("onesDigit");
													return comboBox_2;
												})();
												cell.controlConstraint = {};
											}
										}
									]
								}
							});
							container.addChild(grid_1, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var group_5 = new cpr.controls.Container("grp16");
							var formLayout_2 = new cpr.controls.layouts.FormLayout();
							formLayout_2.scrollable = false;
							formLayout_2.topMargin = "0px";
							formLayout_2.rightMargin = "0px";
							formLayout_2.bottomMargin = "0px";
							formLayout_2.leftMargin = "0px";
							formLayout_2.horizontalSpacing = "5px";
							formLayout_2.verticalSpacing = "5px";
							formLayout_2.setColumns(["1fr", "100px"]);
							formLayout_2.setColumnAutoSizing(1, true);
							formLayout_2.setRows(["1fr"]);
							group_5.setLayout(formLayout_2);
							(function(container){
								var output_4 = new cpr.controls.Output("opt9");
								output_4.value = "\u2022  콤보박스 selection-change 이벤트에서 filterExp를 사용하여 콤보박스의 십의자리수 항목에 해당하는 일의 자리수 목록으로 필터할 수 있습니다.\r\n";
								container.addChild(output_4, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var button_1 = new cpr.controls.Button("btn1");
								button_1.value = "filterExp 실행";
								if(typeof onBtn1Click == "function") {
									button_1.addEventListener("click", onBtn1Click);
								}
								container.addChild(button_1, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_5);
							container.addChild(group_5, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_4);
						container.addChild(group_4, {
							"width": "1158px",
							"height": "216px"
						});
						var group_6 = new cpr.controls.Container("grp9");
						group_6.userAttr({
							"mobile-column-count": "1",
							"tablet-column-count": "1"
						});
						var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
						group_6.setLayout(verticalLayout_5);
						(function(container){
							var output_5 = new cpr.controls.Output("opt8");
							output_5.value = "\u2022  콤보박스 setFilter API,  filterExp 속성을 이용하여 필터처리를 할 수 있습니다. ";
							container.addChild(output_5, {
								"autoSize": "none",
								"width": "1158px",
								"height": "30px"
							});
							var group_7 = new cpr.controls.Container("grp10");
							group_7.style.setClasses(["content-form-box"]);
							var formLayout_3 = new cpr.controls.layouts.FormLayout();
							formLayout_3.topMargin = "5px";
							formLayout_3.rightMargin = "10px";
							formLayout_3.bottomMargin = "5px";
							formLayout_3.leftMargin = "10px";
							formLayout_3.horizontalSpacing = "20px";
							formLayout_3.verticalSpacing = "10px";
							formLayout_3.horizontalSeparatorWidth = 1;
							formLayout_3.verticalSeparatorWidth = 1;
							formLayout_3.setColumns(["30px", "145px", "5fr", "150px", "1fr", "1fr"]);
							formLayout_3.setColumnMinWidth(2, 200);
							formLayout_3.setColumnMinWidth(4, 70);
							formLayout_3.setColumnMinWidth(5, 70);
							formLayout_3.setRows(["26px", "26px", "26px"]);
							formLayout_3.setUseRowShade(0, true);
							formLayout_3.setRowAutoSizing(1, true);
							formLayout_3.setRowAutoSizing(2, true);
							group_7.setLayout(formLayout_3);
							(function(container){
								var output_6 = new cpr.controls.Output("opt11");
								output_6.value = "#";
								output_6.style.setClasses(["label"]);
								container.addChild(output_6, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_7 = new cpr.controls.Output("opt12");
								output_7.value = "속성";
								output_7.style.setClasses(["label"]);
								container.addChild(output_7, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var output_8 = new cpr.controls.Output("opt13");
								output_8.value = "설명";
								output_8.style.setClasses(["label"]);
								container.addChild(output_8, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var output_9 = new cpr.controls.Output("opt14");
								output_9.value = "동작";
								output_9.style.setClasses(["label"]);
								container.addChild(output_9, {
									"colIndex": 4,
									"rowIndex": 0
								});
								var output_10 = new cpr.controls.Output("opt15");
								output_10.value = "1";
								output_10.style.setClasses(["text-center"]);
								container.addChild(output_10, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_11 = new cpr.controls.Output("opt16");
								output_11.value = "ComboBox.filterExp";
								container.addChild(output_11, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var output_12 = new cpr.controls.Output("opt17");
								output_12.value = "아이템을 필터하는 익스프레션을 설정합니다.";
								output_12.style.setClasses(["text-left"]);
								container.addChild(output_12, {
									"colIndex": 2,
									"rowIndex": 1
								});
								var comboBox_3 = new cpr.controls.ComboBox("cmb3");
								(function(comboBox_3){
									comboBox_3.setItemSet(app.lookup("dsCmb3"), {
										"label": "label",
										"value": "value"
									});
								})(comboBox_3);
								container.addChild(comboBox_3, {
									"colIndex": 3,
									"rowIndex": 1
								});
								var output_13 = new cpr.controls.Output("opt18");
								output_13.value = "콤보박스";
								output_13.style.setClasses(["label"]);
								container.addChild(output_13, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var button_2 = new cpr.controls.Button("btnSetFilter");
								button_2.value = "실행";
								button_2.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilterClick == "function") {
									button_2.addEventListener("click", onBtnSetFilterClick);
								}
								container.addChild(button_2, {
									"colIndex": 4,
									"rowIndex": 1
								});
								var output_14 = new cpr.controls.Output("opt10");
								output_14.value = "해제";
								output_14.style.setClasses(["label"]);
								container.addChild(output_14, {
									"colIndex": 5,
									"rowIndex": 0
								});
								var button_3 = new cpr.controls.Button("btnSetFilter2");
								button_3.value = "실행";
								button_3.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilter2Click == "function") {
									button_3.addEventListener("click", onBtnSetFilter2Click);
								}
								container.addChild(button_3, {
									"colIndex": 5,
									"rowIndex": 1
								});
								var output_15 = new cpr.controls.Output("opt45");
								output_15.value = "2";
								output_15.style.setClasses(["text-center"]);
								container.addChild(output_15, {
									"colIndex": 0,
									"rowIndex": 2
								});
								var output_16 = new cpr.controls.Output("opt46");
								output_16.value = "ComboBox.setFilter";
								container.addChild(output_16, {
									"colIndex": 1,
									"rowIndex": 2
								});
								var output_17 = new cpr.controls.Output("opt47");
								output_17.value = "5보다 크고 25보다 작은 아이템만 보여주도록 필터를 설정합니다.";
								output_17.style.setClasses(["text-left"]);
								container.addChild(output_17, {
									"colIndex": 2,
									"rowIndex": 2
								});
								var comboBox_4 = new cpr.controls.ComboBox("cmb4");
								(function(comboBox_4){
									comboBox_4.setItemSet(app.lookup("dsCmb5"), {
										"label": "label",
										"value": "value"
									});
								})(comboBox_4);
								container.addChild(comboBox_4, {
									"colIndex": 3,
									"rowIndex": 2
								});
								var button_4 = new cpr.controls.Button("btnSetFilter5");
								button_4.value = "실행";
								button_4.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilter5Click == "function") {
									button_4.addEventListener("click", onBtnSetFilter5Click);
								}
								container.addChild(button_4, {
									"colIndex": 4,
									"rowIndex": 2
								});
								var button_5 = new cpr.controls.Button("btnSetFilter6");
								button_5.value = "실행";
								button_5.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilter6Click == "function") {
									button_5.addEventListener("click", onBtnSetFilter6Click);
								}
								container.addChild(button_5, {
									"colIndex": 5,
									"rowIndex": 2
								});
							})(group_7);
							container.addChild(group_7, {
								"autoSize": "height",
								"width": "1158px",
								"height": "115px"
							});
						})(group_6);
						container.addChild(group_6, {
							"autoSize": "height",
							"width": "1158px",
							"height": "150px"
						});
						var group_8 = new cpr.controls.Container("grp14");
						group_8.userAttr({
							"mobile-column-count": "1",
							"tablet-column-count": "1"
						});
						var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
						group_8.setLayout(verticalLayout_6);
						(function(container){
							var output_18 = new cpr.controls.Output("opt24");
							output_18.value = "\u2022  필터 사용시에는 연산자를 사용하여 like와 같은 형태를 구현할 수 있습니다.";
							container.addChild(output_18, {
								"autoSize": "none",
								"width": "1158px",
								"height": "30px"
							});
							var group_9 = new cpr.controls.Container("grp15");
							group_9.style.setClasses(["content-form-box"]);
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.topMargin = "5px";
							formLayout_4.rightMargin = "10px";
							formLayout_4.bottomMargin = "5px";
							formLayout_4.leftMargin = "10px";
							formLayout_4.horizontalSpacing = "20px";
							formLayout_4.verticalSpacing = "10px";
							formLayout_4.horizontalSeparatorWidth = 1;
							formLayout_4.verticalSeparatorWidth = 1;
							formLayout_4.setColumns(["30px", "2fr", "5fr", "150px", "1fr", "1fr"]);
							formLayout_4.setColumnMinWidth(1, 100);
							formLayout_4.setColumnMinWidth(2, 200);
							formLayout_4.setColumnMinWidth(4, 70);
							formLayout_4.setColumnMinWidth(5, 70);
							formLayout_4.setRows(["26px", "26px"]);
							formLayout_4.setUseRowShade(0, true);
							formLayout_4.setRowAutoSizing(1, true);
							group_9.setLayout(formLayout_4);
							(function(container){
								var output_19 = new cpr.controls.Output("opt27");
								output_19.value = "#";
								output_19.style.setClasses(["label"]);
								container.addChild(output_19, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_20 = new cpr.controls.Output("opt30");
								output_20.value = "속성";
								output_20.style.setClasses(["label"]);
								container.addChild(output_20, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var output_21 = new cpr.controls.Output("opt35");
								output_21.value = "filterExp";
								output_21.style.setClasses(["label"]);
								container.addChild(output_21, {
									"colIndex": 2,
									"rowIndex": 0
								});
								var output_22 = new cpr.controls.Output("opt36");
								output_22.value = "동작";
								output_22.style.setClasses(["label"]);
								container.addChild(output_22, {
									"colIndex": 4,
									"rowIndex": 0
								});
								var output_23 = new cpr.controls.Output("opt37");
								output_23.value = "1";
								output_23.style.setClasses(["text-center"]);
								container.addChild(output_23, {
									"colIndex": 0,
									"rowIndex": 1
								});
								var output_24 = new cpr.controls.Output("opt38");
								output_24.value = "ComboBox.filterExp";
								container.addChild(output_24, {
									"colIndex": 1,
									"rowIndex": 1
								});
								var output_25 = new cpr.controls.Output("opt39");
								output_25.value = "label *= \"서울시\"";
								output_25.style.setClasses(["text-left"]);
								container.addChild(output_25, {
									"colIndex": 2,
									"rowIndex": 1
								});
								var comboBox_5 = new cpr.controls.ComboBox("cmb2");
								(function(comboBox_5){
									comboBox_5.setItemSet(app.lookup("dsCmb4"), {
										"label": "label",
										"value": "value"
									});
								})(comboBox_5);
								container.addChild(comboBox_5, {
									"colIndex": 3,
									"rowIndex": 1
								});
								var output_26 = new cpr.controls.Output("opt40");
								output_26.value = "콤보박스";
								output_26.style.setClasses(["label"]);
								container.addChild(output_26, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var button_6 = new cpr.controls.Button("btnSetFilter3");
								button_6.value = "실행";
								button_6.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilter3Click == "function") {
									button_6.addEventListener("click", onBtnSetFilter3Click);
								}
								container.addChild(button_6, {
									"colIndex": 4,
									"rowIndex": 1
								});
								var output_27 = new cpr.controls.Output("opt41");
								output_27.value = "해제";
								output_27.style.setClasses(["label"]);
								container.addChild(output_27, {
									"colIndex": 5,
									"rowIndex": 0
								});
								var button_7 = new cpr.controls.Button("btnSetFilter4");
								button_7.value = "실행";
								button_7.style.setClasses(["btn-primary"]);
								if(typeof onBtnSetFilter4Click == "function") {
									button_7.addEventListener("click", onBtnSetFilter4Click);
								}
								container.addChild(button_7, {
									"colIndex": 5,
									"rowIndex": 1
								});
							})(group_9);
							container.addChild(group_9, {
								"autoSize": "height",
								"width": "1158px",
								"height": "79px"
							});
						})(group_8);
						container.addChild(group_8, {
							"autoSize": "height",
							"width": "1158px",
							"height": "114px"
						});
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "height",
						"width": "1200px",
						"height": "630px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1240px",
					"height": "738px"
				});
				var group_10 = new cpr.controls.Container("grp4");
				group_10.style.setClasses(["content-box"]);
				var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_7.spacing = 10;
				verticalLayout_7.leftMargin = 20;
				verticalLayout_7.rightMargin = 20;
				verticalLayout_7.topMargin = 20;
				verticalLayout_7.bottomMargin = 20;
				group_10.setLayout(verticalLayout_7);
				(function(container){
					var output_28 = new cpr.controls.Output("opt2");
					output_28.value = "트리 filter&filterExp";
					output_28.style.setClasses(["content-tit"]);
					container.addChild(output_28, {
						"autoSize": "height",
						"width": "100px",
						"height": "26px"
					});
					var group_11 = new cpr.controls.Container("grp5");
					group_11.style.setClasses(["card"]);
					var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_8.spacing = 10;
					verticalLayout_8.leftMargin = 20;
					verticalLayout_8.rightMargin = 20;
					verticalLayout_8.topMargin = 20;
					verticalLayout_8.bottomMargin = 20;
					group_11.setLayout(verticalLayout_8);
					(function(container){
						var output_29 = new cpr.controls.Output("opt3");
						output_29.value = "트리에서는 셀렉션 컨트롤 공통으로 filterExp 기능을 가지고 있고, 추가로 setTreeFilter를 제공하고 있습니다.\r\nsetTreeFilter는 자식 아이템만 필터 했을 시 연결된 부모 아이템도 표시하는 기능입니다. ";
						output_29.style.setClasses(["opt-tmpl"]);
						container.addChild(output_29, {
							"autoSize": "height",
							"width": "1158px",
							"height": "44px"
						});
						var group_12 = new cpr.controls.Container("grp6");
						group_12.style.setClasses(["card"]);
						var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_9.spacing = 20;
						verticalLayout_9.leftMargin = 20;
						verticalLayout_9.rightMargin = 20;
						verticalLayout_9.topMargin = 20;
						verticalLayout_9.bottomMargin = 20;
						group_12.setLayout(verticalLayout_9);
						(function(container){
							var group_13 = new cpr.controls.Container("grp7");
							group_13.style.setClasses(["box"]);
							var formLayout_5 = new cpr.controls.layouts.FormLayout();
							formLayout_5.scrollable = false;
							formLayout_5.topMargin = "0px";
							formLayout_5.rightMargin = "0px";
							formLayout_5.bottomMargin = "0px";
							formLayout_5.leftMargin = "0px";
							formLayout_5.horizontalSpacing = "0px";
							formLayout_5.verticalSpacing = "0px";
							formLayout_5.horizontalSeparatorWidth = 1;
							formLayout_5.setColumns(["1fr"]);
							formLayout_5.setRows(["40px", "1fr"]);
							group_13.setLayout(formLayout_5);
							(function(container){
								var output_30 = new cpr.controls.Output("opt6");
								output_30.value = "기능 확인 컨트롤";
								output_30.style.setClasses(["box-tit"]);
								container.addChild(output_30, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var group_14 = new cpr.controls.Container("grp11");
								var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
								verticalLayout_10.leftMargin = 20;
								verticalLayout_10.rightMargin = 20;
								verticalLayout_10.topMargin = 20;
								verticalLayout_10.bottomMargin = 20;
								group_14.setLayout(verticalLayout_10);
								(function(container){
									var tree_1 = new cpr.controls.Tree("sampleTre");
									tree_1.autoOpen = 4;
									(function(tree_1){
										tree_1.setItemSet(app.lookup("dsList2"), {
											"label": "label",
											"value": "value",
											"parentValue": "parent"
										});
									})(tree_1);
									container.addChild(tree_1, {
										"autoSize": "none",
										"width": "300px",
										"height": "275px"
									});
								})(group_14);
								container.addChild(group_14, {
									"colIndex": 0,
									"rowIndex": 1
								});
							})(group_13);
							container.addChild(group_13, {
								"autoSize": "height",
								"width": "583px",
								"height": "366px"
							});
							var group_15 = new cpr.controls.Container("grp12");
							group_15.userAttr({
								"mobile-column-count": "1",
								"tablet-column-count": "1"
							});
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.scrollable = false;
							formLayout_6.userResizingMode = "standard";
							formLayout_6.topMargin = "0px";
							formLayout_6.rightMargin = "0px";
							formLayout_6.bottomMargin = "0px";
							formLayout_6.leftMargin = "0px";
							formLayout_6.horizontalSpacing = "36px";
							formLayout_6.verticalSpacing = "15px";
							formLayout_6.verticalSeparatorClass = "splitter";
							formLayout_6.verticalSeparatorWidth = 6;
							formLayout_6.setColumns(["2fr"]);
							formLayout_6.setRows(["1fr"]);
							group_15.setLayout(formLayout_6);
							(function(container){
								var group_16 = new cpr.controls.Container("grp13");
								group_16.style.setClasses(["content-form-box"]);
								var formLayout_7 = new cpr.controls.layouts.FormLayout();
								formLayout_7.topMargin = "5px";
								formLayout_7.rightMargin = "10px";
								formLayout_7.bottomMargin = "5px";
								formLayout_7.leftMargin = "10px";
								formLayout_7.horizontalSpacing = "20px";
								formLayout_7.verticalSpacing = "10px";
								formLayout_7.horizontalSeparatorWidth = 1;
								formLayout_7.verticalSeparatorWidth = 1;
								formLayout_7.setColumns(["30px", "2fr", "5fr", "2fr", "1fr"]);
								formLayout_7.setColumnMinWidth(1, 100);
								formLayout_7.setColumnMinWidth(2, 200);
								formLayout_7.setColumnMinWidth(3, 140);
								formLayout_7.setColumnMinWidth(4, 70);
								formLayout_7.setRows(["28px", "28px", "28px", "28px", "28px"]);
								formLayout_7.setUseRowShade(0, true);
								formLayout_7.setRowAutoSizing(1, true);
								formLayout_7.setRowAutoSizing(2, true);
								formLayout_7.setRowAutoSizing(3, true);
								formLayout_7.setRowAutoSizing(4, true);
								group_16.setLayout(formLayout_7);
								(function(container){
									var output_31 = new cpr.controls.Output("opt7");
									output_31.value = "#";
									output_31.style.setClasses(["label"]);
									container.addChild(output_31, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_32 = new cpr.controls.Output("opt19");
									output_32.value = "함수";
									output_32.style.setClasses(["label"]);
									container.addChild(output_32, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_33 = new cpr.controls.Output("opt20");
									output_33.value = "설명";
									output_33.style.setClasses(["label"]);
									container.addChild(output_33, {
										"colIndex": 2,
										"rowIndex": 0
									});
									var output_34 = new cpr.controls.Output("opt21");
									output_34.value = "1";
									output_34.style.setClasses(["text-center"]);
									container.addChild(output_34, {
										"colIndex": 0,
										"rowIndex": 2
									});
									var output_35 = new cpr.controls.Output("opt22");
									output_35.value = "동작";
									output_35.style.setClasses(["label"]);
									container.addChild(output_35, {
										"colIndex": 4,
										"rowIndex": 0
									});
									var output_36 = new cpr.controls.Output("opt23");
									output_36.value = "입력값";
									output_36.style.setClasses(["label"]);
									container.addChild(output_36, {
										"colIndex": 3,
										"rowIndex": 0
									});
									var output_37 = new cpr.controls.Output("opt25");
									output_37.value = "4";
									output_37.style.setClasses(["text-center"]);
									container.addChild(output_37, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_38 = new cpr.controls.Output("opt26");
									output_38.value = "setFilter";
									container.addChild(output_38, {
										"colIndex": 1,
										"rowIndex": 2
									});
									var output_39 = new cpr.controls.Output("opt28");
									output_39.value = "cleartFilter";
									container.addChild(output_39, {
										"colIndex": 1,
										"rowIndex": 4
									});
									var output_40 = new cpr.controls.Output("opt29");
									output_40.value = "클릭한 트리 아이템과 하위자식들만 보이도록 설정합니다. (hasAncestor 사용)";
									output_40.style.setClasses(["text-left"]);
									container.addChild(output_40, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var output_41 = new cpr.controls.Output("opt31");
									output_41.value = "필터를 제거합니다.";
									output_41.style.setClasses(["text-left"]);
									container.addChild(output_41, {
										"colIndex": 2,
										"rowIndex": 4
									});
									var output_42 = new cpr.controls.Output("optHasAncestor");
									output_42.value = "";
									container.addChild(output_42, {
										"colIndex": 3,
										"rowIndex": 2
									});
									var button_8 = new cpr.controls.Button("btnHasAncestor");
									button_8.value = "실행";
									button_8.style.setClasses(["btn-primary"]);
									if(typeof onBtnHasAncestorClick == "function") {
										button_8.addEventListener("click", onBtnHasAncestorClick);
									}
									container.addChild(button_8, {
										"colIndex": 4,
										"rowIndex": 2
									});
									var button_9 = new cpr.controls.Button("btnHasAncestor3");
									button_9.value = "실행";
									button_9.style.setClasses(["btn-primary"]);
									if(typeof onBtnHasAncestor3Click == "function") {
										button_9.addEventListener("click", onBtnHasAncestor3Click);
									}
									container.addChild(button_9, {
										"colIndex": 4,
										"rowIndex": 4
									});
									var output_43 = new cpr.controls.Output("opt32");
									output_43.value = "1";
									output_43.style.setClasses(["text-center"]);
									container.addChild(output_43, {
										"colIndex": 0,
										"rowIndex": 1
									});
									var output_44 = new cpr.controls.Output("opt33");
									output_44.value = "setFilter";
									container.addChild(output_44, {
										"colIndex": 1,
										"rowIndex": 1
									});
									var output_45 = new cpr.controls.Output("opt34");
									output_45.value = "부모의 값이 0인것만 보이도록 설정합니다.";
									output_45.style.setClasses(["text-left"]);
									container.addChild(output_45, {
										"colIndex": 2,
										"rowIndex": 1
									});
									var button_10 = new cpr.controls.Button("btnHasAncestor4");
									button_10.value = "실행";
									button_10.style.setClasses(["btn-primary"]);
									if(typeof onBtnHasAncestor4Click == "function") {
										button_10.addEventListener("click", onBtnHasAncestor4Click);
									}
									container.addChild(button_10, {
										"colIndex": 4,
										"rowIndex": 1
									});
									var output_46 = new cpr.controls.Output("optHasAncestor2");
									output_46.value = "parent == '0'";
									container.addChild(output_46, {
										"colIndex": 3,
										"rowIndex": 1
									});
									var output_47 = new cpr.controls.Output("opt42");
									output_47.value = "3";
									output_47.style.setClasses(["text-center"]);
									container.addChild(output_47, {
										"colIndex": 0,
										"rowIndex": 3
									});
									var output_48 = new cpr.controls.Output("opt43");
									output_48.value = "setTreeFilter";
									container.addChild(output_48, {
										"colIndex": 1,
										"rowIndex": 3
									});
									var output_49 = new cpr.controls.Output("opt44");
									output_49.value = "자식 아이템을 표시하고 계층 구조도 그대로 표시해야 하는 경우 사용됩니다";
									output_49.style.setClasses(["text-left"]);
									container.addChild(output_49, {
										"colIndex": 2,
										"rowIndex": 3
									});
									var button_11 = new cpr.controls.Button("btnHasAncestor2");
									button_11.value = "실행";
									button_11.style.setClasses(["btn-primary"]);
									if(typeof onBtnHasAncestor2Click == "function") {
										button_11.addEventListener("click", onBtnHasAncestor2Click);
									}
									container.addChild(button_11, {
										"colIndex": 4,
										"rowIndex": 3
									});
								})(group_16);
								container.addChild(group_16, {
									"colIndex": 0,
									"rowIndex": 0,
									"colSpan": 1,
									"rowSpan": 1,
									"height": 192
								});
							})(group_15);
							container.addChild(group_15, {
								"autoSize": "height",
								"width": "1116px",
								"height": "204px"
							});
						})(group_12);
						container.addChild(group_12, {
							"autoSize": "height",
							"width": "1158px",
							"height": "631px"
						});
					})(group_11);
					container.addChild(group_11, {
						"autoSize": "height",
						"width": "1200px",
						"height": "780px"
					});
				})(group_10);
				container.addChild(group_10, {
					"autoSize": "height",
					"width": "1240px",
					"height": "881px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "1240px",
				"height": "1670px"
			});
			
			var hTMLSnippet_1 = new cpr.controls.HTMLSnippet();
			hTMLSnippet_1.value = "<style>\r\n.cl-container.content-box {\r\n\t\tbackground-color: #f5f8fa;\r\n\t\t\r\n\t\t.cl-output.content-tit {\r\n\t\t\tfont-size: 18px;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tcolor: #4d91ff;\r\n\t\t\t\r\n\t\t\t&.Notice{\r\n\t\t\t\tcolor : #EFA747;\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t.cl-output.content-notice-title {\r\n\t\t   font-size: 18px;\r\n\t\t\tfont-weight: 700;\r\n\t\t\tcolor: #7A001B;\r\n\t\t    \r\n\t\t   }\t\r\n\t\t.cl-container.box {\r\n\t\t\tbackground-color: #ffffff;\r\n\t\t\tborder: 1px solid #d6d6d6;\r\n\t\t\t\r\n\t\t\t.cl-output.box-tit {\r\n\t\t\t\tbackground-color: #e6edf9;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t.content-info{\r\n\t\t\tbackground-color : #FEFBDB;\r\n\t\t}\r\n\t\t.content-notice{\r\n\t\t\tbackground-color :  #FFCCD7;\r\n\t\t}\r\n\t}\r\n\t// 카드\r\n.cl-container.card {\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 1px solid #d6d6d6;\r\n\t\tborder-radius: 0px;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t.cl-output.opt-tmpl{\r\n\t\t\tline-height: 2.0;\r\n\t\t    color: #3B454F;\r\n\t\t    font-size : 16px;\r\n\t\t    -webkit-user-select: text;\r\n\t\t}\r\n\t\t\r\n\t}\r\n.cl-container.card {\r\n\tbackground-color: #ffffff;\r\n\tborder: 1px solid #d6d6d6;\r\n\tborder-radius: 4px;\r\n}\r\n.cl-container.content-form-box {\r\n\t\tbackground-color: white;\r\n\t\tborder: 1px solid #dbdfea;\r\n\t\tborder-radius: 4px;\r\n\t\t\r\n\t\t.cl-output {\r\n\t\t\tfont: 14px \"Noto Sans KR\", \"Malgun Gothic\", sans-serif;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tcolor: #3B454F;\r\n\t\t\t\r\n\t\t\t&.content-form-opt {\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\tfont-weight: normal;\r\n\t\t\t\tpadding-left: 1rem;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t.cl-formlayout-column-shade {\r\n\t\t\tbackground-color: #E6EAFA;\r\n\t\t}\r\n\t\t\r\n\t\t.cl-formlayout-row-shade {\r\n\t\t\tbackground-color: #E6EAFA;\r\n\t\t}\r\n\t\t\r\n\t\t.cl-formlayout-vertical-separator,\r\n\t\t.cl-formlayout-horizontal-separator {\r\n\t\t\tbackground-color:#dbdfea;\r\n\t\t}\r\n\t\t\r\n\t\t&.type-box {\r\n\t\t\t.cl-output {\r\n\t\t\t\tcolor: #184a6d;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.cl-formlayout-column-shade {\r\n\t\t\t\tbackground-color: #d4e5f0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.cl-formlayout-row-shade {\r\n\t\t\t\tbackground-color: #d4e5f0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\t<\/style>";
			container.addChild(hTMLSnippet_1, {
				"autoSize": "none",
				"width": "1240px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "필터";
	cpr.core.Platform.INSTANCE.register(app);
})();
