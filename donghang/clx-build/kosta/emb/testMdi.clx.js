/*
 * App URI: kosta/emb/testMdi
 * Source Location: kosta/emb/testMdi.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/emb/testMdi", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * testMdi.js
			 * Created at 2023. 8. 17. 오후 2:24:46.
			 *
			 * @author USER
			 ************************************************/
			var initValue 
			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTre1ItemClick(e){
				var tre1 = e.control;
				
				// mdi 컨트롤 
				var vcMdi = app.lookup("mdi1");
				
				// 선택한 아이템에 대한 값 
				var vsAppId = e.item.value;
				
				// 초기값
				initValue = e.item.label;
				
				// 입력값에 선택된 앱이 존재하지 않는 경우
				if(vsAppId == null) {
					return alert("추가될 App이 존재하지 않습니다.");
				}

				var vcTabItem = vcMdi.findItemWithAppID(vsAppId);
				if (vcTabItem != null) {
					alert("추가되어있는 App 입니다.");
					return;
				}
				
				// addItemWithApp을 통해 앱을 추가
				var tabItem = vcMdi.addItemWithApp(vsAppId);
				
				
				//https://edu.tomatosystem.co.kr/sample/main.html?goToAppPage=app/sample/bsc/ctl/ctlMDIFolder 해당 링크 참고 
				
			}

			/*
			 * MDI 폴더에서 content-load 이벤트 발생 시 호출.
			 * TabItem의 Content가 그려지고 브라우저에 표현되기 직전에 호출됨.
			 */
			function onMdi1ContentLoad(e){
				var mdi1 = e.control;
				// mdi 컨트롤 
				var vcMdi = app.lookup("mdi1");
				
				//선택한 탭아이템
				var tabItem = vcMdi.getSelectedTabItem();

			     /** @type cpr.controls.EmbeddedApp */

			    var embApp = tabItem.content;    // 선택한 탭 아이템의 컨텐츠 영역(임베디드앱)
			    
			    //임베디드 앱의 앱인스턴스
			    var voAppIns = embApp.getEmbeddedAppInstance();

			    //임베디드한 화면안에 존재하는 컨트롤의 값 변경
			    voAppIns.lookup("opt").value = initValue;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "첫번째", "value": "kosta/emb/Ex_Emb/emb_1"},
					{"label": "두번째", "value": "kosta/emb/Ex_Emb/emb_2"},
					{"label": "세번째", "value": "kosta/emb/Ex_Emb/emb_3"}
				]
			});
			app.register(dataSet_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			if(typeof onMdi1ContentLoad == "function") {
				mDIFolder_1.addEventListener("content-load", onMdi1ContentLoad);
			}
			container.addChild(mDIFolder_1, {
				"top": "49px",
				"left": "271px",
				"width": "675px",
				"height": "625px"
			});
			
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(tree_1);
			if(typeof onTre1ItemClick == "function") {
				tree_1.addEventListener("item-click", onTre1ItemClick);
			}
			container.addChild(tree_1, {
				"top": "49px",
				"left": "12px",
				"width": "249px",
				"height": "625px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.visible = false;
			output_1.value = "트리아이템 clcik 이벤트에 화면을 전환하는 스크립트가 작성되어 있습니다. \r\n트리 아이템은 데이터셋에 바인딩 되어 있는데, 데이터셋의 존재하는 트리 아이템의 value 값을 확인해보면 appID로 되어있습니다. 이점 참고해주시면됩니다.";
			output_1.style.css({
				"font-size" : "30px"
			});
			container.addChild(output_1, {
				"top": "41px",
				"left": "982px",
				"width": "423px",
				"height": "625px"
			});
		}
	});
	app.title = "MDI를 활용한 화면 전환";
	cpr.core.Platform.INSTANCE.register(app);
})();
