/*
 * App URI: kosta/emb/testEmb
 * Source Location: kosta/emb/testEmb.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("kosta/emb/testEmb", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * testEmb.js
			 * Created at 2023. 8. 17. 오후 2:13:39.
			 *
			 * @author USER
			 ************************************************/

			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTre1ItemClick(e){
				var tre1 = e.control;
				// 배치한 임베디드 앱
				var vcEmb = app.lookup("ea1");
				
				// 선택한 아이템에 대한 값 
				var vsAppId = e.item.value;
				
				// 입력값에 선택된 앱이 존재하지 않는 경우
				if(vsAppId == null) {
					return alert("추가될 App이 존재하지 않습니다.");
				}
				
				/*앱을 로드하고 로드된 앱을 임베디드 앱에 설정합니다.*/
				cpr.core.App.load(vsAppId, function(/*cpr.core.App*/ loadedApp){
					/*임베디드앱에 안에 앱이 있는 경우에는 앱을 삭제해줍니다.(다시 앱을 열고싶을때 스크립트 작성)*/
					if(vcEmb.getEmbeddedAppInstance()){
						vcEmb.getEmbeddedAppInstance().dispose();
					}
					/*로드된 앱이 있는 경우에는 임베디드앱 안에 불러온 앱을 넣습니다.*/
					if(loadedApp){						
						/*초기값을 전달합니다.*/			
						vcEmb.ready(function(/*cpr.controls.EmbeddedApp*/embApp){
							embApp.initValue =  e.item.label;
						})
						/*임베디드 앱에 내장할 앱을 로드하여 설정합니다*/
						vcEmb.app = loadedApp;
					}
				}); 
				
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "첫번째", "value": "kosta/emb/Ex_Emb/emb_1"},
					{"label": "두번째", "value": "kosta/emb/Ex_Emb/emb_2"},
					{"label": "세번째", "value": "kosta/emb/Ex_Emb/emb_3"}
				]
			});
			app.register(dataSet_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(tree_1);
			if(typeof onTre1ItemClick == "function") {
				tree_1.addEventListener("item-click", onTre1ItemClick);
			}
			container.addChild(tree_1, {
				"top": "55px",
				"left": "31px",
				"width": "249px",
				"height": "625px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			if(typeof onEa1Load == "function") {
				embeddedApp_1.addEventListener("load", onEa1Load);
			}
			container.addChild(embeddedApp_1, {
				"top": "55px",
				"left": "290px",
				"width": "688px",
				"height": "625px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.visible = false;
			output_1.value = "트리아이템 clcik 이벤트에 화면을 전환하는 스크립트가 작성되어 있습니다. \r\n트리 아이템은 데이터셋에 바인딩 되어 있는데, 데이터셋의 존재하는 트리 아이템의 value 값을 확인해보면 appID로 되어있습니다. 이점 참고해주시면됩니다.";
			output_1.style.css({
				"font-size" : "30px"
			});
			container.addChild(output_1, {
				"top": "55px",
				"left": "1013px",
				"width": "423px",
				"height": "625px"
			});
		}
	});
	app.title = "임베디드앱을 활용한 화면전환";
	cpr.core.Platform.INSTANCE.register(app);
})();
