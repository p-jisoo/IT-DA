/// start - udc.apply
/*
 * UDC Qualified Name: udc.apply
 * App URI: udc/apply
 * Source Location: udc/apply.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function(){
	// App Declaration
		var internalApp = new cpr.core.App("udc/apply", { 
			onPrepare: function(loader) {
			},
			onCreate: function(/* cpr.core.AppInstance */ app, exports) {
				var linker = {};
				// Start - User Script
				/************************************************
				 * apply.js
				 * Created at 2023. 8. 10. 오전 10:53:17.
				 *
				 * @author USER
				 ************************************************/;
				// End - User Script
				
				// Header
				app.supportMedia("all and (min-width: 1024px)", "default");
				app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
				app.supportMedia("all and (max-width: 499px)", "mobile");
				
				// Configure root container
				var container = app.getContainer();
				container.style.css({
					"width" : "100%",
					"height" : "100%"
				});
				
				// Layout
				var xYLayout_1 = new cpr.controls.layouts.XYLayout();
				container.setLayout(xYLayout_1);
				
				// UI Configuration
				var button_1 = new cpr.controls.Button();
				button_1.value = "신청";
				container.addChild(button_1, {
					"top": "243px",
					"left": "263px",
					"width": "254px",
					"height": "130px"
				});
			}
		});
	internalApp.title = "apply";
	
	// Type declaration for apply
	cpr.utils.Util.ensurePackage("udc").apply = function(id){
		cpr.controls.UDCBase.call(this, "udc.apply", internalApp, id);
	};
	
	udc.apply.prototype = Object.create(cpr.controls.UDCBase.prototype);
	Object.defineProperty(udc.apply.prototype, "type", {
		get : function(){
			return "udc.apply";
		},
		
		configurable: true
	});
	
	// App Properties
	
	// Register type into the Platform and package
	cpr.core.Platform.INSTANCE.register(internalApp);
})();
/// end - udc.apply
