<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.tomato.donghang.model.mapper.EduApplyBoardMapper">

	<sql id="selectEduBoard">
		SELECT EBOARD_NO, EDU_BOARD_TITLE, EDU_BOARD_START_PERIOD,
		EDU_BOARD_END_PERIOD,EDU_BOARD_APPLY_START_PERIOD,EDU_BOARD_APPLY_END_PERIOD,
		EDU_BOARD_APPLY_MEMBER_COUNT,EDU_APPLY_BOARD_CATEGORY,EDU_APPLY_BOARD_STATUS,EDU_APPLY_BOARD_CONTENT
		FROM EDU_APPLY_BOARD
	</sql>

	<select id="findAllBoardCount">
		select count(*) from edu_apply_board
	</select>


	<select id="findBoardList"
		resultType="com.tomato.donghang.model.vo.EduApplyBoardVO">
		<include refid="selectEduBoard">
		</include>
	</select>

	<select id="findBoardCountByStatus" parameterType="String"
		resultType="long">
		select count(*)
		from EDU_APPLY_BOARD
		where
		EDU_BOARD_STATUS = #{status}
	</select>

	<select id="findBoardCountByStatusWithSearch"
		parameterType="map" resultType="long">
		select count(*)
		from EDU_APPLY_BOARD
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="status != '' and status !=null ">
				EDU_BOARD_STATUS = #{status} 
			</if>
			<if test="type != null and keyword != null">
				<if test="type=='제목'.toString()">
				AND (EDU_BOARD_TITLE LIKE '%'||#{keyword}||'%')
				</if>
				<if test="type=='내용'.toString()">
				AND	(EDU_BOARD_CONTENT LIKE '%'||#{keyword}||'%')
				</if>
				<if test="type=='작성자'.toString()">
				AND	(USER_ID LIKE '%'||#{keyword}||'%')
				</if>
			</if>
			</trim>
	</select>


	<select id="findBoardListPageAndSearch" parameterType="HashMap"
		resultType="com.tomato.donghang.model.vo.EduApplyBoardVO">
		SELECT
		EDU_BOARD_NO,
		rnum,
		EDU_BOARD_TITLE,
		EDU_BOARD_START_PERIOD,
		EDU_BOARD_MEMBER_COUNT,
		EDU_BOARD_CATEGORY,
		EDU_BOARD_CONTENT,
		EDU_BOARD_STATUS
		FROM
		(SELECT row_number() over(ORDER BY EDU_BOARD_NO
		DESC) as
		rnum,EDU_BOARD_NO,
		EDU_BOARD_TITLE,
		EDU_BOARD_STATUS,
		EDU_BOARD_START_PERIOD,
		EDU_BOARD_MEMBER_COUNT,
		EDU_BOARD_CATEGORY,
		EDU_BOARD_CONTENT
		FROM edu_apply_board
		<where>
			<foreach item="val" index="key" collection="map">
				<if test="status != '' and status !=null ">
					edu_board_status =#{status}
				</if>
			</foreach>
		</where>
		)
		WHERE rnum BETWEEN #{pagination.startRowNumber} and
		#{pagination.endRowNumber}
	</select>
	<select id="findBoardListPageAndSearchThing" parameterType="map"
		resultType="Hashmap">
		select
		EDU_BOARD_NO,
		EDU_BOARD_TITLE,
		USER_ID,
		EDU_BOARD_STATUS,
		EDU_BOARD_ADDRESS,
		TOTAL_COUNT,
		EDU_BOARD_MAX_MEMBER_COUNT
		from
		(SELECT
		row_number() over(ORDER BY e.EDU_BOARD_NO DESC) as rnum,
		e.EDU_BOARD_NO,
		e.EDU_BOARD_TITLE,
		e.EDU_BOARD_CONTENT,
		e.USER_ID,
		e.EDU_BOARD_ADDRESS,
		e.EDU_BOARD_STATUS,
		NVL(r.TOTAL_COUNT,0) AS TOTAL_COUNT,
		e.EDU_BOARD_MAX_MEMBER_COUNT
		FROM
		EDU_APPLY_BOARD e
		LEFT OUTER JOIN
		(SELECT
		EDU_BOARD_NO,
		COUNT(EDU_BOARD_NO) AS TOTAL_COUNT
		FROM
		EDU_BOARD_MEMBER_COUNT
		GROUP BY
		EDU_BOARD_NO
		) r
		ON
		e.EDU_BOARD_NO = r.EDU_BOARD_NO
		<where>
			<if test="status != '' and status !=null ">
				EDU_BOARD_STATUS = #{status}
			</if>
		</where>
		)
		WHERE
		rnum BETWEEN #{pagination.startRowNumber} and #{pagination.endRowNumber}
	</select>

	<select id="findBoardListPageAndSearchKeyword"
		parameterType="map" resultType="Hashmap">
		select
		LAST_VALUE(rnum) OVER() AS COUNTING,
		EDU_BOARD_NO,
		EDU_BOARD_TITLE,
		USER_ID,
		EDU_BOARD_ADDRESS,
		EDU_BOARD_STATUS,
		TOTAL_COUNT,
		EDU_BOARD_MAX_MEMBER_COUNT	
		from
		(SELECT
		row_number() over(ORDER BY e.EDU_BOARD_NO DESC) as rnum,
		e.EDU_BOARD_NO,
		e.EDU_BOARD_TITLE,
		e.EDU_BOARD_CONTENT,
		e.USER_ID,
		e.EDU_BOARD_ADDRESS,
		e.EDU_BOARD_STATUS,
		NVL(r.TOTAL_COUNT,0) AS TOTAL_COUNT,
		e.EDU_BOARD_MAX_MEMBER_COUNT
		FROM
		EDU_APPLY_BOARD e
		LEFT OUTER JOIN
		(SELECT
		EDU_BOARD_NO,
		COUNT(EDU_BOARD_NO) AS TOTAL_COUNT
		FROM
		EDU_BOARD_MEMBER_COUNT
		GROUP BY
		EDU_BOARD_NO
		) r
		ON
		e.EDU_BOARD_NO = r.EDU_BOARD_NO

		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="status != '' and status !=null ">
				EDU_BOARD_STATUS = #{status} 
			</if>
			<if test="type != null and keyword != null">
				<if test="type=='제목'.toString()">
				AND (EDU_BOARD_TITLE LIKE '%'||#{keyword}||'%')
				</if>
				<if test="type=='내용'.toString()">
				AND	(EDU_BOARD_CONTENT LIKE '%'||#{keyword}||'%')
				</if>
				<if test="type=='작성자'.toString()">
				AND	(USER_ID LIKE '%'||#{keyword}||'%')
				</if>
			</if>
			</trim>

		)
		WHERE
		rnum BETWEEN #{pagination.startRowNumber} and #{pagination.endRowNumber}
	</select>
	
	<select id="isLike" parameterType="map" resultType="Integer">
select
	COUNT(l.EDU_BOARD_NO)
from
	EDU_APPLY_BOARD e
LEFT OUTER JOIN
	(SELECT 
		EDU_BOARD_NO,
		USER_ID
	FROM 
		LIKE_BOARD
	) l
ON e.EDU_BOARD_NO = l.EDU_BOARD_NO
where e.EDU_BOARD_NO = #{eduBoardNo}
<if test="userId !=null and userId !='' ">
	AND e.USER_ID = #{userId}
</if>


	</select>
	
	
	
	<insert id="addLikeCount" parameterType="hashMap">
INSERT INTO 
	LIKE_BOARD(USER_ID,EDU_BOARD_NO)
VALUES
	(#{userId},#{eduBoardNo})
	</insert>
	
	<delete id="deleteLikeCount">
DELETE FROM LIKE_BOARD
WHERE 
USER_ID = #{userId}
AND EDU_BOARD_NO = #{eduBoardNo}
	</delete>
	
	
<!-- hyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeok -->
<resultMap type="com.tomato.donghang.model.vo.EduApplyBoardVO" id="boardResultMap">
    <result property="eduBoardNo" column="EDU_BOARD_NO"/>
    <result property="eduBoardTitle" column="EDU_BOARD_TITLE"/>
    <result property="eduBoardStartPeriod" column="EDU_BOARD_START_PERIOD"/>
    <result property="eduBoardEndPeriod" column="EDU_BOARD_END_PERIOD"/>
    <result property="eduBoardApplyStartPeriod" column="EDU_BOARD_APPLY_START_PERIOD"/>
    <result property="eduBoardApplyEndPeriod" column="EDU_BOARD_APPLY_END_PERIOD"/>
    <result property="eduBoardMaxMemberCount" column="EDU_BOARD_MAX_MEMBER_COUNT"/>
    <result property="eduBoardAddress" column="EDU_BOARD_ADDRESS"/>
    <result property="eduBoardCategory" column="EDU_BOARD_CATEGORY"/>
    <result property="eduBoardContent" column="EDU_BOARD_CONTENT"/>
    <result property="eduBoardStatus" column="EDU_BOARD_STATUS"/>
    <association property="memberVO" javaType="com.tomato.donghang.model.vo.MemberVO">
        <result property="userId" column="USER_ID"/>
    </association>
</resultMap>

<resultMap type="com.tomato.donghang.model.vo.EduApplyCommentBoardVO" id="commentBoardResultMap">
    <result property="eduApplyCommentBoardNo" column="EDU_APPLY_COMMENT_BOARD_NO"/>
    <result property="eduApplyCommentContent" column="EDU_APPLY_COMMENT_CONTENT"/>
    <association property="memberVO" javaType="com.tomato.donghang.model.vo.MemberVO">
        <result property="userId" column="USER_ID"/>
    </association>
<association property="eduApplyBoardVO" javaType="com.tomato.donghang.model.vo.EduApplyBoardVO">
    	<result property="eduBoardNo" column="EDU_BOARD_NO"/>
    </association>
</resultMap>
	
<select id="selectBoard" resultType="com.tomato.donghang.model.vo.EduApplyBoardVO" resultMap="boardResultMap">
SELECT 
EDU_BOARD_NO,
EDU_BOARD_TITLE,
EDU_BOARD_START_PERIOD,
EDU_BOARD_END_PERIOD, 
EDU_BOARD_APPLY_START_PERIOD,
EDU_BOARD_APPLY_END_PERIOD,
EDU_BOARD_MAX_MEMBER_COUNT,
EDU_BOARD_ADDRESS,
EDU_BOARD_CATEGORY,
EDU_BOARD_CONTENT,
EDU_BOARD_STATUS,
USER_ID
FROM EDU_APPLY_BOARD
where EDU_BOARD_NO=#{eduBoardNo}
</select>
	<insert id="createBoard" parameterType="com.tomato.donghang.model.vo.EduApplyBoardVO">
INSERT INTO EDU_APPLY_BOARD(
EDU_BOARD_NO,
EDU_BOARD_TITLE,
EDU_BOARD_START_PERIOD,
EDU_BOARD_END_PERIOD, 
EDU_BOARD_APPLY_START_PERIOD,
EDU_BOARD_APPLY_END_PERIOD,
EDU_BOARD_MAX_MEMBER_COUNT,
EDU_BOARD_ADDRESS,
EDU_BOARD_CATEGORY,
EDU_BOARD_CONTENT,
USER_ID
)
 VALUES(
 EDU_APPLY_BOARD_SEQ.NEXTVAL,
#{eduBoardTitle},
#{eduBoardStartPeriod},
#{eduBoardEndPeriod},
#{eduBoardApplyStartPeriod},
#{eduBoardApplyEndPeriod},
#{eduBoardMaxMemberCount},
#{eduBoardAddress},
#{eduBoardCategory},
#{eduBoardContent},
#{memberVO.userId}
)
	</insert>
	<update id="updateBoard" parameterType="com.tomato.donghang.model.vo.EduApplyBoardVO">
UPDATE EDU_APPLY_BOARD 
SET
EDU_BOARD_TITLE =#{eduBoardTitle},
EDU_BOARD_START_PERIOD=#{eduBoardStartPeriod},
EDU_BOARD_END_PERIOD=#{eduBoardEndPeriod},
EDU_BOARD_APPLY_START_PERIOD=#{eduBoardApplyStartPeriod},
EDU_BOARD_APPLY_END_PERIOD=#{eduBoardApplyEndPeriod},
EDU_BOARD_MAX_MEMBER_COUNT=#{eduBoardMaxMemberCount},
EDU_BOARD_ADDRESS=#{eduBoardAddress},
EDU_BOARD_CATEGORY=#{eduBoardCategory},
EDU_BOARD_CONTENT=#{eduBoardContent}
WHERE EDU_BOARD_NO=1
</update>	
<delete id="deleteBoard" parameterType="com.tomato.donghang.model.vo.EduApplyBoardVO">
DELETE FROM EDU_APPLY_BOARD 
WHERE EDU_BOARD_NO = 1
</delete>


<select id="selectCommentBoard" resultType="com.tomato.donghang.model.vo.EduApplyCommentBoardVO" resultMap="commentBoardResultMap">
SELECT 
EDU_APPLY_COMMENT_BOARD_NO,
EDU_APPLY_COMMENT_CONTENT,
EDU_BOARD_NO,
USER_ID
FROM
EDU_APPLY_COMMENT_BOARD
WHERE
EDU_BOARD_NO=#{eduApplyBoardVO.eduBoardNo}
AND
USER_ID=#{memberVO.userId}
</select>
	<insert id="createCommentBoard" parameterType="com.tomato.donghang.model.vo.EduApplyCommentBoardVO" >
INSERT INTO EDU_APPLY_COMMENT_BOARD(
EDU_APPLY_COMMENT_BOARD_NO,
EDU_APPLY_COMMENT_CONTENT,
EDU_BOARD_NO,
USER_ID
)
VALUES(
EDU_APPLY_COMMENT_BOARD_SEQ.NEXTVAL,
#{eduApplyCommentContent},
'1111',
'1234'
);
	</insert>
	<update id="updateCommentBoard" parameterType="com.tomato.donghang.model.vo.EduApplyCommentBoardVO">
UPDATE EDU_APPLY_COMMENT_BOARD 
SET
EDU_APPLY_COMMENT_CONTENT= #{eduApplyCommentContent}
WHERE
EDU_BOARD_NO='1111'
AND
USER_ID='b'
</update>	

<delete id="deleteCommentBoard" parameterType="com.tomato.donghang.model.vo.EduApplyCommentBoardVO">
DELETE FROM EDU_APPLY_COMMENT_BOARD 
WHERE
EDU_BOARD_NO='1111'
AND
USER_ID='b'
</delete>
<select id="selectCommentBoardMap" resultType="Hashmap" parameterType="map">
SELECT 
EDU_APPLY_COMMENT_BOARD_NO,
EDU_APPLY_COMMENT_CONTENT,
EDU_BOARD_NO,
USER_ID
FROM
EDU_APPLY_COMMENT_BOARD
WHERE
EDU_BOARD_NO=#{eduBoardNo}
AND
USER_ID=#{userId}
</select>

<!--hyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeokhyeok-->
</mapper>